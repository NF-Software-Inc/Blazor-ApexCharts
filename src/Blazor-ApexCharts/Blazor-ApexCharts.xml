<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Blazor-ApexCharts</name>
    </assembly>
    <members>
        <member name="T:ApexCharts.ApexChart`1">
            <summary>
            Main component to create an Apex chart in Blazor
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.ApexChart`1.ChildContent">
            <summary>
            Used to contain the data within the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ApexChart`1.ApexPointTooltip">
            <inheritdoc cref="T:ApexCharts.Tooltip"/>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Options">
            <summary>
            The options to customize the chart with
            </summary>
            <remarks>
            Each instance of this component must have its own options object
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Title">
            <inheritdoc cref="P:ApexCharts.Title.Text"/>
        </member>
        <member name="P:ApexCharts.ApexChart`1.XAxisType">
            <inheritdoc cref="P:ApexCharts.XAxis.Type"/>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Debug">
            <summary>
            Specifies whether to enable debug mode
            </summary>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Width">
            <inheritdoc cref="P:ApexCharts.Chart.Width"/>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Height">
            <inheritdoc cref="P:ApexCharts.Chart.Height"/>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnXAxisLabelClick">
            <summary>
            Fires when user clicks on the x-axis labels.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/xaxis-label-click">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnMarkerClick">
            <summary>
            Fires when user clicks on the markers.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/marker-click">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnDataPointSelection">
            <summary>
            Fires when user clicks on a datapoint (bar/column/marker/bubble/donut-slice).
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/data-point-selection">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnDataPointEnter">
            <summary>
            Fires when user's mouse enter on a datapoint (bar/column/marker/bubble/donut-slice).
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/data-point-hover">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnDataPointLeave">
            <summary>
            MouseLeave event for a datapoint (bar/column/marker/bubble/donut-slice).
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/data-point-hover">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnLegendClicked">
            <summary>
            Fires when user clicks on legend.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/legend-click">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnSelection">
            <summary>
            Fires when user selects rect using the selection tool.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/selection">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnBrushScrolled">
            <summary>
            Fires when user drags the brush in a brush chart.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/brush-scrolled">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnZoomed">
            <summary>
            Fires when user zooms in/out the chart using either the selection zooming tool or zoom in/out buttons.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/events/zoomed">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.OnRendered">
            <summary>
            Fires when <see cref="M:ApexCharts.ApexChart`1.RenderAsync"/> completes
            </summary>
        </member>
        <member name="P:ApexCharts.ApexChart`1.FormatYAxisLabel">
            <summary>
            A custom function to execute for generating Y-axis labels. Only supported in Blazor WebAssembly!
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/formatters">Blazor Example</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.GroupPoints">
            <summary>
            Enables merging multiple data points into a single item in the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/group-points">Blazor Example</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChart`1.Series">
            <summary>
            The collection of data series to display on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ApexChart`1.ChartId">
            <inheritdoc cref="P:ApexCharts.Chart.Id"/>
        </member>
        <member name="M:ApexCharts.ApexChart`1.OnAfterRenderAsync(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexChart`1.OnParametersSet">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexChart`1.RenderAsync">
            <summary>
            The render() method is responsible for drawing the chart on the page. It is the primary method that has to be called after configuring the options.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/render">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#render">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.AddPointAnnotationAsync(ApexCharts.AnnotationsPoint,System.Boolean)">
            <summary>
            The addPointAnnotation() method can be used to draw annotations after chart is rendered.
            </summary>
            <param name="annotationsPoint">This function accepts the same parameters as it accepts in the point annotations config.</param>
            <param name="pushToMemory">When enabled, it preserves the annotations in subsequent chart updates. If you don't want it to be saved for the next updates, turn off this option</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/annotations">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#addpointannotation">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.AppendDataAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            This method allows you to append new data to the series array. If you have existing multiple series, provide the new array in the same indexed order.
            </summary>
            <param name="items">The data array to append the existing series datasets</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/append-data">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#appendData">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ZoomXAsync(ApexCharts.ZoomOptions)">
            <summary>
            Manually zoom into the chart with the start and end X values.
            </summary>
            <param name="zoomOptions">Undefined</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/zoomx">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#zoomX">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ZoomXAsync(System.Decimal,System.Decimal)">
            <summary>
            Manually zoom into the chart with the start and end X values.
            </summary>
            <param name="start">The starting x-axis value. Accepts timestamp or a number</param>
            <param name="end">The ending x-axis value. Accepts timestamp or a number</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/zoomx">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#zoomX">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ResetSeriesAsync(System.Boolean,System.Boolean)">
            <summary>
            Resets all toggled series and bring back the chart to its original state.
            </summary>
            <param name="shouldUpdateChart">After resetting the series, the chart data should update and return to it's original series.</param>
            <param name="shouldResetZoom">If the user has zoomed in when this method is called, the zoom level should also reset.</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/methods/#resetSeries">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.GetDataUriAsync(ApexCharts.DataUriOptions)">
            <summary>
            The dataURI() method is used to get base64 dataURI. Then this dataURI can be used to generate PDF using jsPDF
            </summary>
            <param name="dataUriOptions">The options object accepts scale or width property which allows to adjust the size of the exported graphic. scale/width both accepts a number.</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/data-uri">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#dataURI">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.AddXAxisAnnotationAsync(ApexCharts.AnnotationsXAxis,System.Boolean)">
            <summary>
            The addXaxisAnnotation() method can be used to draw annotations after chart is rendered.
            </summary>
            <param name="annotationsXAxis">This function accepts the same parameters as it accepts in the annotations x-axis config.</param>
            <param name="pushToMemory">When enabled, it preserves the annotations in subsequent chart updates. If you don't want it to be saved for the next updates, turn off this option</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/annotations">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#addxaxisannotation">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.AddYAxisAnnotationAsync(ApexCharts.AnnotationsYAxis,System.Boolean)">
            <summary>
            The addYaxisAnnotation() method can be used to draw annotations after chart is rendered.
            </summary>
            <param name="annotationsYAxis">This function accepts the same parameters as it accepts in the annotations y-axis config.</param>
            <param name="pushToMemory">When enabled, it preserves the annotations in subsequent chart updates. If you don't want it to be saved for the next updates, turn off this option</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/annotations">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#addyaxisannotation">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ClearAnnotationsAsync">
            <summary>
            The clearAnnotations() method is used to delete all annotation elements which are added dynamically using the three methods stated above.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/annotations">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#clearAnnotations">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.RemoveAnnotationAsync(System.String)">
            <summary>
            The removeAnnotation() method can be used to delete any previously added annotations. Only annotations which are added by external methods (addPointAnnotation, addXaxisAnnotation, addYaxisAnnotation) are affected. Annotations defined in the options/config object are not affected.
            </summary>
            <param name="id">The unqiue identifier of the annotation which was created using the addPointAnnotation, addXaxisAnnotation or addYaxisAnnotation methods.</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/methods/#removeAnnotation">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.UpdateOptionsAsync(System.Boolean,System.Boolean,System.Boolean,ApexCharts.ZoomOptions)">
            <summary>
            This method allows you to update the configuration object by passing the options as the first parameter. The new config object is merged with the existing config object preserving the existing configuration.
            </summary>
            <param name="redrawPaths">When the chart is re-rendered, should it draw from the existing paths or completely redraw the chart paths from the beginning. By default, the chart is re-rendered from the existing paths</param>
            <param name="animate">Should the chart animate on re-rendering</param>
            <param name="updateSyncedCharts">All the charts in a group should also update when one chart in a group is updated.</param>
            <param name="zoom">Undefined</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/update-options">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#updateOptions">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.UpdateSeriesAsync(System.Boolean)">
            <summary>
            Allows you to update the series array overriding the existing one. If you want to append series to existing series, use the appendSeries() method
            </summary>
            <param name="animate">Should the chart animate on re-rendering</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/update-series">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#updateSeries">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ToggleDataPointSelectionAsync(System.Int32,System.Nullable{System.Int32})">
            <summary>
            This method allows you to select/deselect a data-point of a particular series.
            </summary>
            <param name="seriesIndex">Index of the series array. If you are rendering a pie/donut/radialBar chart, this acts as dataPointIndex and is the only thing you have to provide as pie/donut/radialBar don't support multi-series chart.</param>
            <param name="dataPointIndex">Index of the data-point in the series selected in previous argument. Not required in pie/donut/radialBar</param>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/toggle-data-point">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#toggleDataPointSelection">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ToggleSeriesAsync(System.String)">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Toggle"/>
            <param name="seriesName">The series name which you want to toggle visibility for.</param>
        </member>
        <member name="M:ApexCharts.ApexChart`1.ShowSeriesAsync(System.String)">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Show"/>
            <param name="seriesName">The series name which you want to show.</param>
        </member>
        <member name="M:ApexCharts.ApexChart`1.HideSeriesAsync(System.String)">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Hide"/>
            <param name="seriesName">The series name which you want to hide.</param>
        </member>
        <member name="M:ApexCharts.ApexChart`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSGetFormattedYAxisValue(System.Object)">
            <summary>
            Callback from JavaScript to get a formatted Y-axis value
            </summary>
            <param name="value">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.FormatYAxisLabel"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSZoomed(ApexCharts.Series.JSZoomed)">
            <summary>
            Callback from JavaScript on zoom
            </summary>
            <param name="jSZoomed">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnZoomed"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSBrushScrolled(ApexCharts.Series.JSSelection)">
            <summary>
            Callback from JavaScript on selection updated
            </summary>
            <param name="jsSelection">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnBrushScrolled"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSSelected(ApexCharts.Series.JSSelection)">
            <summary>
            Callback from JavaScript on selection updated
            </summary>
            <param name="jsSelection">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnSelection"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSLegendClicked(ApexCharts.Series.JSLegendClicked)">
            <summary>
            Callback from JavaScript on a legend item clicked
            </summary>
            <param name="jsLegendClicked">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnLegendClicked"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSXAxisLabelClick(ApexCharts.JSXAxisLabelClick)">
            <summary>
            Callback from JavaScript on an X-axis label clicked
            </summary>
            <param name="jsXAxisLabelClick">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnXAxisLabelClick"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSMarkerClick(ApexCharts.JSDataPointSelection)">
            <summary>
            Callback from JavaScript on marker clicked
            </summary>
            <param name="selectedDataPoints">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnMarkerClick"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSDataPointSelected(ApexCharts.JSDataPointSelection)">
            <summary>
            Callback from JavaScript on data point selected
            </summary>
            <param name="selectedDataPoints">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnDataPointSelection"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSDataPointEnter(ApexCharts.JSDataPointSelection)">
            <summary>
            Callback from JavaScript on data point enter
            </summary>
            <param name="selectedDataPoints">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnDataPointEnter"/>
            </remarks>
        </member>
        <member name="M:ApexCharts.ApexChart`1.JSDataPointLeave(ApexCharts.JSDataPointSelection)">
            <summary>
            Callback from JavaScript on data point leave
            </summary>
            <param name="selectedDataPoints">Details from JavaScript</param>
            <remarks>
            Will execute <see cref="P:ApexCharts.ApexChart`1.OnDataPointLeave"/>
            </remarks>
        </member>
        <member name="T:ApexCharts.ApexGauge">
            <summary>
            Component to create a single-value <see cref="F:ApexCharts.SeriesType.RadialBar"/> chart in Blazor
            </summary>
        </member>
        <member name="P:ApexCharts.ApexGauge.Title">
            <inheritdoc cref="P:ApexCharts.Title.Text"/>
        </member>
        <member name="P:ApexCharts.ApexGauge.Percentage">
            <inheritdoc cref="P:ApexCharts.GaugeValue.Percentage"/>
        </member>
        <member name="P:ApexCharts.ApexGauge.Label">
            <inheritdoc cref="P:ApexCharts.GaugeValue.Label"/>
        </member>
        <member name="P:ApexCharts.ApexGauge.Options">
            <summary>
            The options to customize the radial bar chart with
            </summary>
        </member>
        <member name="M:ApexCharts.ApexGauge.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexGauge.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.GeneralExtensions">
            <summary>
            Extension methods for use in Blazor components
            </summary>
        </member>
        <member name="M:ApexCharts.GeneralExtensions.FirstDayOfMonth(System.DateTimeOffset)">
            <summary>
            Returns the first day of the month with the time value set to 00:00:00.000000 for the provided value
            </summary>
            <param name="value">The value to get the first day of the month for</param>
        </member>
        <member name="M:ApexCharts.GeneralExtensions.DayOnly(System.DateTimeOffset)">
            <summary>
            Returns the provided value with the time set to 00:00:00.000000
            </summary>
            <param name="value">The value to remove the time portion from</param>
        </member>
        <member name="M:ApexCharts.GeneralExtensions.ToUnixTimeMilliseconds(System.DateTime)">
            <summary>
            Converts the provided value to its Unix millisecond value
            </summary>
            <param name="d">The value to convert</param>
        </member>
        <member name="M:ApexCharts.GeneralExtensions.SetValue``1(System.Collections.Generic.IList{``0},System.Action{``0})">
            <summary>
            Executes the provided method on each item in the provided collection and returns the updated values
            </summary>
            <typeparam name="T">The data type of the items in the list</typeparam>
            <param name="items">The collection of items to update</param>
            <param name="updateMethod">The method to execute on each item in the list</param>
        </member>
        <member name="T:ApexCharts.ApexChartOptions`1">
            <summary>
            Main class to configure options that are to be serialized and passed to the JavaScript.
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Annotations">
            <inheritdoc cref="T:ApexCharts.Annotations" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Chart">
            <inheritdoc cref="T:ApexCharts.Chart" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Colors">
            <summary>
            Colors for the chart's series. When all colors of the array are used, it starts from the beginning. Predefined colors are available in <see href="https://apexcharts.com/docs/options/theme">theme palettes</see>
            </summary>
            <remarks>
            You should only provide either hex or rgb/rgba format. Color names are not accepted at the moment.
            
            Links:
            
            <see href="https://apexcharts.com/docs/colors">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/colors">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.DataLabels">
            <inheritdoc cref="T:ApexCharts.DataLabels" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Fill">
            <inheritdoc cref="T:ApexCharts.Fill" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Grid">
            <inheritdoc cref="T:ApexCharts.Grid" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Labels">
            <summary>
            In Axis Charts (line / column), labels can be set instead of setting xaxis categories option. While, in pie/donut charts, each label corresponds to value in series array.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/labels">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Legend">
            <inheritdoc cref="T:ApexCharts.Legend" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Markers">
            <inheritdoc cref="T:ApexCharts.Markers" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.NoData">
            <inheritdoc cref="T:ApexCharts.NoData" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.PlotOptions">
            <inheritdoc cref="T:ApexCharts.PlotOptions" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Responsive">
            <inheritdoc cref="T:ApexCharts.Responsive" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Series">
            <inheritdoc cref="T:ApexCharts.Series`1" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.ForecastDataPoints">
            <inheritdoc cref="T:ApexCharts.ForecastDataPoints" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.States">
            <inheritdoc cref="T:ApexCharts.States" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Stroke">
            <inheritdoc cref="T:ApexCharts.Stroke" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Subtitle">
            <inheritdoc cref="T:ApexCharts.Subtitle" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Theme">
            <inheritdoc cref="T:ApexCharts.Theme" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Title">
            <inheritdoc cref="T:ApexCharts.Title" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Tooltip">
            <inheritdoc cref="T:ApexCharts.Tooltip" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Xaxis">
            <inheritdoc cref="T:ApexCharts.XAxis" />
        </member>
        <member name="P:ApexCharts.ApexChartOptions`1.Yaxis">
            <inheritdoc cref="T:ApexCharts.YAxis" />
        </member>
        <member name="T:ApexCharts.ForecastDataPoints">
            <summary>
            Class to define how additional data points that extrapolate the provided data should be generated
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/forecastdatapoints">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ForecastDataPoints.Count">
            <summary>
            Number of ending data-points you want to indicate as a forecast or prediction values. The ending line/bar will result into a dashed border with a distinct look to differentiate from the rest of the data-points.
            </summary>
        </member>
        <member name="P:ApexCharts.ForecastDataPoints.FillOpacity">
            <summary>
            Opacity of the fill attribute.
            </summary>
        </member>
        <member name="P:ApexCharts.ForecastDataPoints.StrokeWidth">
            <summary>
            Sets the width of the border (applies to line/area/bar/boxplots).
            </summary>
        </member>
        <member name="P:ApexCharts.ForecastDataPoints.DashArray">
            <summary>
            Creates dashes in borders of SVG path. Higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsTreemap">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Treemap"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/chart-types/treemap-chart">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/treemap">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.EnableShades">
            <summary>
            Enable different shades of color depending on the value
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.ShadeIntensity">
            <summary>
            Enable different shades of color depending on the value. Accepts from 0 to 1
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.Distributed">
            <summary>
            When turned on, each series in a treemap will have it's own lowest and highest range and colors will be shaded for each series. Default value is false.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.ReverseNegativeShade">
            <summary>
            When enabled, it will reverse the shades for negatives but keep the positive shades as it is now. An example of such use-case would be in a profit/loss chart where darker reds mean larger losses, darker greens mean larger gains.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.UseFillColorAsStroke">
            <summary>
            When turned on, the stroke/border around the treemap cell has the same color as the cell color.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.ColorScale">
            <inheritdoc cref="T:ApexCharts.TreemapColorScale" />
        </member>
        <member name="P:ApexCharts.PlotOptionsTreemap.DataLabels">
            <inheritdoc cref="T:ApexCharts.TreemapDataLabels" />
        </member>
        <member name="T:ApexCharts.TreemapDataLabels">
            <summary>
            Defines how to style data labels within a treemap chart.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapDataLabels.Format">
            <summary>
            You can either set the labels to scale based on the box size, or you can keep the same font-size and let the labels truncate if they exceed the area.
            </summary>
        </member>
        <member name="T:ApexCharts.TreemapColorScale">
            <summary>
            Defines how to color a given section of the treemap chart.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapColorScale.Inverse">
            <summary>
            In a multiple series treemap, flip the color-scale to fill the treemaps vertically instead of horizontally.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapColorScale.Ranges">
            <inheritdoc cref="T:ApexCharts.TreemapRanges" />
        </member>
        <member name="P:ApexCharts.TreemapColorScale.Min">
            <summary>
            Specify the lower range for treemap color calculation.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapColorScale.Max">
            <summary>
            Specify the higher range for treemap color calculation.
            </summary>
        </member>
        <member name="T:ApexCharts.TreemapRanges">
            <summary>
            Defines zones and colors to apply to the treemap chart
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapRanges.From">
            <summary>
            Value indicating range's upper limit
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapRanges.To">
            <summary>
            Value indicating range's lower limit
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapRanges.Color">
            <summary>
            Background color to fill the range with.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapRanges.ForeColor">
            <summary>
            Fore Color of the text if data-labels is enabled.
            </summary>
        </member>
        <member name="P:ApexCharts.TreemapRanges.Name">
            <summary>
            Undefined
            </summary>
        </member>
        <member name="T:ApexCharts.Annotations">
            <summary>
            Annotations in ApexCharts allows you to write custom text on specific data-points or on axes values.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/annotations">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/annotations">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/annotations">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Annotations.Images">
            <inheritdoc cref="T:ApexCharts.AnnotationsImage" />
        </member>
        <member name="P:ApexCharts.Annotations.Points">
            <inheritdoc cref="T:ApexCharts.AnnotationsPoint" />
        </member>
        <member name="P:ApexCharts.Annotations.Texts">
            <inheritdoc cref="T:ApexCharts.AnnotationsText" />
        </member>
        <member name="P:ApexCharts.Annotations.Xaxis">
            <inheritdoc cref="T:ApexCharts.AnnotationsXAxis" />
        </member>
        <member name="P:ApexCharts.Annotations.Yaxis">
            <inheritdoc cref="T:ApexCharts.AnnotationsYAxis" />
        </member>
        <member name="T:ApexCharts.AnnotationsImage">
            <summary>
            Defines details for images to use on the data annotations
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.AppendTo">
            <summary>
            A query selector to which the image element will be appended.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.Height">
            <summary>
            The height of the image
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.Path">
            <summary>
            The height of the image
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.Width">
            <summary>
            The width of the image
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.X">
            <summary>
            Left position for the image relative to the element specified in <see cref="P:ApexCharts.AnnotationsImage.AppendTo"/> property
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsImage.Y">
            <summary>
            Top position for the image relative to the element specified in <see cref="P:ApexCharts.AnnotationsImage.AppendTo"/> property
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationsPoint">
            <summary>
            Defines details for individual data annotation points
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.Image">
            <inheritdoc cref="T:ApexCharts.AnnotationsPointImage" />
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.Label">
            <inheritdoc cref="T:ApexCharts.Label" />
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.Marker">
            <inheritdoc cref="T:ApexCharts.AnnotationMarker" />
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.SeriesIndex">
            <summary>
            In a multiple series, you will have to specify which series the annotation's y value belongs to. Not required for single series
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.X">
            <summary>
            X Value on which the annotation will be drawn (can be either timestamp for datetime x-axis or string category for category x-axis)
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.Y">
            <summary>
            Y Value on which the annotation will be drawn
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPoint.YAxisIndex">
            <summary>
            When there are multiple y-axis, setting this options will put the point annotation for that particular y-axis' y value
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationsPointImage">
            <summary>
            Defines details for an image to use with an individual data annotation point
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPointImage.Height">
            <summary>
            Height of image annotation.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPointImage.OffsetX">
            <summary>
            Left offset of the image.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPointImage.OffsetY">
            <summary>
            Top offset of the image.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPointImage.Path">
            <summary>
            Provide a full path of the image to display in place of annotation.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsPointImage.Width">
            <summary>
            Width of image annotation.
            </summary>
        </member>
        <member name="T:ApexCharts.Label">
            <summary>
            Defines the options for an annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.BorderColor">
            <summary>
            Border Color of the label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.BorderWidth">
            <summary>
            Border width of the label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.BorderRadius">
            <summary>
            Border-radius of the label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.OffsetX">
            <summary>
            Sets the left offset for annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.OffsetY">
            <summary>
            Sets the top offset for annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.Orientation">
            <summary>
            The direction to display the label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.Position">
            <summary>
            Where to place the label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.Style">
            <inheritdoc cref="T:ApexCharts.Style" />
        </member>
        <member name="P:ApexCharts.Label.Text">
            <summary>
            Text for tha annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Label.TextAnchor">
            <summary>
            The alignment of text relative to label's drawing position
            </summary>
        </member>
        <member name="T:ApexCharts.Style">
            <summary>
            Defines the styling options for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.Background">
            <summary>
            Background Color for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.Color">
            <summary>
            Fore color for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.CssClass">
            <summary>
            A custom Css Class to give to the annotation label elements
            </summary>
        </member>
        <member name="P:ApexCharts.Style.FontFamily">
            <summary>
            Font-family for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.FontSize">
            <summary>
            Font size for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.FontWeight">
            <summary>
            Font-weight for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.Style.Padding">
            <inheritdoc cref="T:ApexCharts.Padding"/>
        </member>
        <member name="T:ApexCharts.Padding">
            <summary>
            Defines the padding values for an object
            </summary>
        </member>
        <member name="P:ApexCharts.Padding.Bottom">
            <summary>
            Bottom padding for the item
            </summary>
        </member>
        <member name="P:ApexCharts.Padding.Left">
            <summary>
            Left padding for the item
            </summary>
        </member>
        <member name="P:ApexCharts.Padding.Right">
            <summary>
            Right padding for the item
            </summary>
        </member>
        <member name="P:ApexCharts.Padding.Top">
            <summary>
            Top padding for the item
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationMarker">
            <summary>
            Defines how to style the marker for a data annotation point
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.CssClass">
            <summary>
            Additional CSS classes to append to the marker
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.FillColor">
            <summary>
            Fill Color of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.OffsetX">
            <summary>
            Sets the left offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.OffsetY">
            <summary>
            Sets the top offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.Radius">
            <summary>
            Radius of the marker (applies to square shape)
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.Shape">
            <summary>
            Shape of the marker.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.Size">
            <summary>
            Size of the marker.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.StrokeColor">
            <summary>
            Stroke Color of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationMarker.StrokeWidth">
            <summary>
            Stroke Size of the marker point.
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationsText">
            <summary>
            Defines how to style the individual data point annotations and their text
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.AppendTo">
            <summary>
            A query selector to which the text element will be appended.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.BorderColor">
            <summary>
            Border Color for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.BorderRadius">
            <summary>
            Border Radius for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.BorderWidth">
            <summary>
            Border width for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.FontFamily">
            <summary>
            Font-family for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.FontSize">
            <summary>
            Font size for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.FontWeight">
            <summary>
            Font-weight for the annotation label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.PaddingBottom">
            <summary>
            Bottom padding for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.PaddingLeft">
            <summary>
            Left padding for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.PaddingRight">
            <summary>
            Right padding for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.PaddingTop">
            <summary>
            Top padding for the label
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.Text">
            <summary>
            The main text to be displayed
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.TextAnchor">
            <summary>
            The alignment of text relative to label's drawing position. 
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.X">
            <summary>
            X (left) position for the text relative to the element specified in <see cref="P:ApexCharts.AnnotationsText.AppendTo"/> property
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsText.Y">
            <summary>
            Y (top) position for the text relative to the element specified in <see cref="P:ApexCharts.AnnotationsText.AppendTo"/> property
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationsXAxis">
            <summary>
            Defines how to style the X-Axis for a data annotation point
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.BorderColor">
            <summary>
            Color of the annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.FillColor">
            <summary>
            Fill Color of the region. Only applicable if <see cref="P:ApexCharts.AnnotationsXAxis.X2"/> is provided.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.Label">
            <inheritdoc cref="T:ApexCharts.Label" />
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.OffsetX">
            <summary>
            Sets the left offset for annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.OffsetY">
            <summary>
            Sets the top offset for annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.Opacity">
            <summary>
            Opacity of the filled region.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.StrokeDashArray">
            <summary>
            Creates dashes in borders of SVG path. A higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.X">
            <summary>
            Value on which the annotation will be drawn
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsXAxis.X2">
            <summary>
            If you provide this additional x2 value, a region will be drawn from x to x2.
            </summary>
        </member>
        <member name="T:ApexCharts.AnnotationsYAxis">
            <summary>
            Defines how to style the Y-Axis for a data annotation point
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.BorderColor">
            <summary>
            Color of the annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.BorderWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.FillColor">
            <summary>
            Fill Color of the region. Only applicable if <see cref="P:ApexCharts.AnnotationsYAxis.Y2"/> is provided.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.Label">
            <inheritdoc cref="T:ApexCharts.Label" />
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.OffsetX">
            <summary>
            Sets the left offset for annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.OffsetY">
            <summary>
            Sets the top offset for annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.Opacity">
            <summary>
            Opacity of the filled region.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.StrokeDashArray">
            <summary>
            Creates dashes in borders of the SVG path. A higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.Width">
            <summary>
            Sets the width for annotation line
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.Y">
            <summary>
            Value on which the annotation will be drawn
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.Y2">
            <summary>
            If you provide this additional y2 value, a region will be drawn from y to y2.
            </summary>
        </member>
        <member name="P:ApexCharts.AnnotationsYAxis.YAxisIndex">
            <summary>
            When there are multiple y-axis, setting this options will put the annotation for that particular y-axis
            </summary>
        </member>
        <member name="T:ApexCharts.Chart">
            <summary>
            Main class to configure options that will be applied to the generated chart.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Chart.Animations">
            <inheritdoc cref="T:ApexCharts.Animations" />
        </member>
        <member name="P:ApexCharts.Chart.Background">
            <summary>
            Background color for the chart area. If you want to set background with css, use .apexcharts-canvas to set it.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Brush">
            <inheritdoc cref="T:ApexCharts.Brush" />
        </member>
        <member name="P:ApexCharts.Chart.DefaultLocale">
            <summary>
            defaultLocale is the preselected language that the chart should render initially and the selected locale has to be present in the locales array. Read more in the <see href="https://apexcharts.com/docs/localization">localization</see> guide.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.DropShadow">
            <inheritdoc cref="T:ApexCharts.DropShadow" />
        </member>
        <member name="P:ApexCharts.Chart.Events">
            <summary>
            A collection of JavaScript functions to execute on specific interations with the chart. Recommendation is to use events within <see cref="T:ApexCharts.ApexChart`1"/>. Available keys are:
            
            animationEnd,
            beforeMount,
            mounted,
            updated,
            click,
            mouseMove,
            mouseLeave,
            legendClick,
            markerClick,
            xAxisLabelClick,
            selection,
            dataPointSelection,
            dataPointMouseEnter,
            dataPointMouseLeave,
            beforeZoom,
            beforeResetZoom,
            zoomed,
            scrolled,
            brushScrolled
            </summary>
            <remarks>
            <see href="https://apexcharts.com/docs/options/chart/events">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Chart.FontFamily">
            <summary>
            Sets the font family for all the text elements of the chart. Defaults to 'Helvetica, Arial, sans-serif'
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.ForeColor">
            <summary>
            Sets the text color for the chart. Defaults to #373d3f
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Group">
            <summary>
            A chart group is created to perform interactive operations at the same time in all the charts. In case you want to create <see href="https://apexcharts.com/docs/chart-types/synchronized-charts">synchronized charts</see>, you will need to provide this property.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Id">
            <summary>
            A chart ID is a unique identifier that will be used in calling certain ApexCharts methods. You will also need chart.id to be set in case you want to use any of the following functionalities.
            
            <list type="bullet">
            <item><see href="https://apexcharts.com/docs/options/chart/brush">brush chart</see></item>
            <item><see href="https://apexcharts.com/docs/chart-types/synchronized-charts">synchronized chart</see></item>
            <item>Calling <see href="https://apexcharts.com/docs/methods/#exec">exec</see> method of ApexCharts</item>
            </list>
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Locales">
            <inheritdoc cref="T:ApexCharts.ChartLocale" />
        </member>
        <member name="P:ApexCharts.Chart.OffsetX">
            <summary>
            Sets the left offset for the whole chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.OffsetY">
            <summary>
            Sets the top offset for the entire chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.ParentHeightOffset">
            <summary>
            A small increment in height added to the parent of chart element.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.RedrawOnParentResize">
            <summary>
            Re-render the chart when the element size gets changed or the size of the parent element gets changed. Useful in conditions where the chart container resizes after page reload.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.RedrawOnWindowResize">
            <summary>
            Re-render the chart when the window in which chart is rendered gets resized. Useful when rendering chart in iframes.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Selection">
            <inheritdoc cref="T:ApexCharts.Selection" />
        </member>
        <member name="P:ApexCharts.Chart.Sparkline">
            <inheritdoc cref="T:ApexCharts.ChartSparkline" />
        </member>
        <member name="P:ApexCharts.Chart.Stacked">
            <summary>
            Enables stacked option for axis charts. <see href="https://apexcharts.com/javascript-chart-demos/column-charts/stacked">Example</see>
            </summary>
            <remarks>
            A stacked chart works only for same chart types and won't work in combo/mixed charts combinations. So, an area series combined with a column series will not work.
            </remarks>
        </member>
        <member name="P:ApexCharts.Chart.StackType">
            <summary>
            When stacked, should the stacking be percentage based or normal stacking.
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Toolbar">
            <inheritdoc cref="T:ApexCharts.Toolbar" />
        </member>
        <member name="P:ApexCharts.Chart.Type">
            <summary>
            Specify the chart type
            </summary>
        </member>
        <member name="P:ApexCharts.Chart.Width">
            <summary>
            Width of the chart.
            </summary>
            <remarks>
            Accepts Number (400) OR String ('400px')
            </remarks>
        </member>
        <member name="P:ApexCharts.Chart.Height">
            <summary>
            Height of the chart. The default value 'auto' is calculated based on the golden ratio 1.618 which roughly translates to a 16:10 aspect ratio. Examples:
            
            <code>
            height: 400 
            height: '400px' 
            height: '100%' 
            </code>
            </summary>
            <remarks>
            Note: If you provide a percentage value '100%', make sure to have a fixed height parent.
            </remarks>
        </member>
        <member name="P:ApexCharts.Chart.Zoom">
            <inheritdoc cref="T:ApexCharts.Zoom" />
        </member>
        <member name="T:ApexCharts.ExportOptions">
            <summary>
            Defines the options to use when exporting charts
            </summary>
        </member>
        <member name="P:ApexCharts.ExportOptions.Csv">
            <inheritdoc cref="T:ApexCharts.ExportCSV" />
        </member>
        <member name="P:ApexCharts.ExportOptions.Svg">
            <inheritdoc cref="T:ApexCharts.ExportSvg" />
        </member>
        <member name="P:ApexCharts.ExportOptions.Png">
            <inheritdoc cref="T:ApexCharts.ExportPng" />
        </member>
        <member name="T:ApexCharts.ExportSvg">
            <summary>
            Defines the options to use when exporting a chart to SVG
            </summary>
        </member>
        <member name="P:ApexCharts.ExportSvg.Filename">
            <summary>
            Name of the SVG file. Defaults to auto generated chart ID
            </summary>
        </member>
        <member name="T:ApexCharts.ExportPng">
            <summary>
            Defines the options to use when exporting a chart to PNG
            </summary>
        </member>
        <member name="P:ApexCharts.ExportPng.Filename">
            <summary>
            Name of the PNG file. Defaults to auto generated chart ID
            </summary>
        </member>
        <member name="T:ApexCharts.ExportCSV">
            <summary>
            Defines the options to use when exporting a chart to CSV
            </summary>
        </member>
        <member name="P:ApexCharts.ExportCSV.Filename">
            <summary>
            Name of the csv file. Defaults to auto generated chart ID
            </summary>
        </member>
        <member name="P:ApexCharts.ExportCSV.ColumnDelimiter">
            <summary>
            Delimeter to separate data-items. Defaults to comma.
            </summary>
        </member>
        <member name="P:ApexCharts.ExportCSV.HeaderCategory">
            <summary>
            Column Title of X values
            </summary>
        </member>
        <member name="P:ApexCharts.ExportCSV.HeaderValue">
            <summary>
            Column Title of Y values
            </summary>
        </member>
        <member name="P:ApexCharts.ExportCSV.DateFormatter">
            <summary>
            If timestamps are provided as X values, those timestamps can be formatted to convert them to date strings.
            </summary>
        </member>
        <member name="T:ApexCharts.Animations">
            <summary>
            ApexCharts provides a smooth experience with the help of svgjs's built in animations.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/animations">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/chart/animations">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Animations.AnimateGradually">
            <inheritdoc cref="T:ApexCharts.AnimateGradually" />
        </member>
        <member name="P:ApexCharts.Animations.DynamicAnimation">
            <inheritdoc cref="T:ApexCharts.DynamicAnimation" />
        </member>
        <member name="P:ApexCharts.Animations.Easing">
            <summary>
            The type of animation to use
            </summary>
        </member>
        <member name="P:ApexCharts.Animations.Enabled">
            <summary>
            Enable or disable all the animations that happen initially or during data update.
            </summary>
        </member>
        <member name="P:ApexCharts.Animations.Speed">
            <summary>
            Speed at which animation runs.
            </summary>
        </member>
        <member name="T:ApexCharts.AnimateGradually">
            <summary>
            Defines options for animations that run individually
            </summary>
        </member>
        <member name="P:ApexCharts.AnimateGradually.Delay">
            <summary>
            Speed at which gradual (one by one) animation runs.
            </summary>
        </member>
        <member name="P:ApexCharts.AnimateGradually.Enabled">
            <summary>
            Gradually animate one by one every data in the series instead of animating all at once.
            </summary>
        </member>
        <member name="T:ApexCharts.DynamicAnimation">
            <summary>
            Defines options for animations that run as the chart data changes
            </summary>
        </member>
        <member name="P:ApexCharts.DynamicAnimation.Enabled">
            <summary>
            Animate the chart when data is changed and chart is re-rendered.
            </summary>
        </member>
        <member name="P:ApexCharts.DynamicAnimation.Speed">
            <summary>
            Speed at which dynamic animation runs whenever data changes.
            </summary>
        </member>
        <member name="T:ApexCharts.Brush">
            <summary>
            Defines options to use for generating a brush chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart/brush">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Brush.AutoScaleYaxis">
            <summary>
            If set to true, the Y-axis will automatically scale based on the visible min/max range.
            </summary>
            <remarks>
            Note: One important configuration to set in a brush chart is the <see href="https://apexcharts.com/docs/options/chart/selection">chart.selection</see> option. The range which you set in <see cref="P:ApexCharts.Chart.Selection"/> will act as brush in the brush chart
            </remarks>
        </member>
        <member name="P:ApexCharts.Brush.Enabled">
            <summary>
            Turn on this option to enable brush chart options. After you enable brush, you need to set target chart ID to allow the brush chart to capture events on the target chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Brush.Target">
            <summary>
            Chart ID of the target chart to sync the brush chart and the target chart. If you have an array of multiple chart IDs, use targets property instead.
            </summary>
        </member>
        <member name="T:ApexCharts.DropShadow">
            <summary>
            Defines how to style a drop shadow for current object
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Blur">
            <summary>
            Set blur distance for shadow
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Color">
            <summary>
            Give a color to the shadow. If array is provided, each series can have different shadow color
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Enabled">
            <summary>
            Enable a dropshadow for paths of the SVG
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Left">
            <summary>
            Set left offset for shadow
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Opacity">
            <summary>
            Set the opacity of shadow.
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.Top">
            <summary>
            Set top offset for shadow
            </summary>
        </member>
        <member name="P:ApexCharts.DropShadow.EnabledOnSeries">
            <summary>
            Provide series index on which the dropshadow should be enabled.
            </summary>
        </member>
        <member name="T:ApexCharts.ChartLocale">
            <summary>
            Defines localization options to use with the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/localization">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/chart/locales">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ChartLocale.Name">
            <summary>
            Name of the locale you will be defining options for. Can be en, fr, etc
            </summary>
        </member>
        <member name="P:ApexCharts.ChartLocale.Options">
            <inheritdoc cref="T:ApexCharts.LocaleOptions" />
        </member>
        <member name="T:ApexCharts.LocaleOptions">
            <summary>
            Defines required properties to provide a localization
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleOptions.Days">
            <summary>
            Full names of days in your language
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleOptions.Months">
            <summary>
            Full month names in your preferred language
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleOptions.ShortDays">
            <summary>
            Abbreviated day names
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleOptions.ShortMonths">
            <summary>
            Abbreviations of months
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleOptions.Toolbar">
            <inheritdoc cref="T:ApexCharts.LocaleToolbar" />
        </member>
        <member name="T:ApexCharts.LocaleToolbar">
            <summary>
            Defines tooltip text required to provide a localization
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.Download">
            <summary>
            Tooltip title text which appears when you hover over download icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.Pan">
            <summary>
            Tooltip title text which appears when you hover over pan icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.Reset">
            <summary>
            Tooltip title text which appears when you hover over reset icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.Selection">
            <summary>
            Tooltip title text which appears when you hover over selection icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.SelectionZoom">
            <summary>
            Tooltip title text which appears when you hover over selection zoom icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.ZoomIn">
            <summary>
            Tooltip title text which appears when you hover over zoom in icon
            </summary>
        </member>
        <member name="P:ApexCharts.LocaleToolbar.ZoomOut">
            <summary>
            Tooltip title text which appears when you hover over zoom out icon
            </summary>
        </member>
        <member name="T:ApexCharts.Selection">
            <summary>
            Defines options and styling to apply to the chart when items are selected within it
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart/selection">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Selection.Enabled">
            <summary>
            To allow selection in axis charts. Selection will not be enabled for category x-axis charts, but only for charts having numeric x-axis. For eg., timeline charts.
            </summary>
        </member>
        <member name="P:ApexCharts.Selection.Fill">
            <inheritdoc cref="T:ApexCharts.SelectionFill" />
        </member>
        <member name="P:ApexCharts.Selection.Stroke">
            <inheritdoc cref="T:ApexCharts.SelectionStroke" />
        </member>
        <member name="P:ApexCharts.Selection.Type">
            <summary>
            Allow selection either on both x-axis, y-axis or on both axis.
            </summary>
        </member>
        <member name="P:ApexCharts.Selection.Xaxis">
            <inheritdoc cref="T:ApexCharts.SelectionXaxis" />
        </member>
        <member name="P:ApexCharts.Selection.Yaxis">
            <inheritdoc cref="T:ApexCharts.SelectionYaxis" />
        </member>
        <member name="T:ApexCharts.SelectionFill">
            <summary>
            Defines styling options for the fill of selections
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionFill.Color">
            <summary>
            Background color of the selection rect which is drawn when user drags on the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionFill.Opacity">
            <summary>
            Opacity of background color of the selection rect.
            </summary>
        </member>
        <member name="T:ApexCharts.SelectionStroke">
            <summary>
            Defines styling options for the stroke of selections
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionStroke.Color">
            <summary>
            Colors of selection border.
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionStroke.DashArray">
            <summary>
            Creates dashes in borders of svg path. Higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionStroke.Opacity">
            <summary>
            Opacity of selection border.
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionStroke.Width">
            <summary>
            Border thickness of the selection rect.
            </summary>
        </member>
        <member name="T:ApexCharts.SelectionXaxis">
            <summary>
            Defines parameters for selections on the X-axis
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionXaxis.Max">
            <summary>
            End value of x-axis. For a time-series chart, a timestamp should be provided.
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionXaxis.Min">
            <summary>
            Start value of x-axis. For a time-series chart, a timestamp should be provided
            </summary>
        </member>
        <member name="T:ApexCharts.SelectionYaxis">
            <summary>
            Defines parameters for the selections on the Y-axis
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionYaxis.Max">
            <summary>
            End value of y-axis (if used in a multiple y-axes chart, this considers the 1st y-axis).
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionYaxis.Min">
            <summary>
            Start value of y-axis. (if used in a multiple y-axes chart, this considers the 1st y-axis).
            </summary>
        </member>
        <member name="T:ApexCharts.ChartSparkline">
            <summary>
            Defines options to use when creating sparklines for the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart/sparkline">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ChartSparkline.Enabled">
            <summary>
            Sparkline hides all the elements of the charts other than the primary paths. Helps to visualize data in small areas. <see href="https://apexcharts.com/javascript-chart-demos/sparklines/basic">Example</see>
            </summary>
        </member>
        <member name="T:ApexCharts.Toolbar">
            <summary>
            Defines options for the toolbar to display in the top-right of the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart/toolbar">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Toolbar.AutoSelected">
            <summary>
            Automatically select one of the following tools when the chart loads.
            </summary>
        </member>
        <member name="P:ApexCharts.Toolbar.OffsetX">
            <summary>
            Sets the left offset of the toolbar.
            </summary>
        </member>
        <member name="P:ApexCharts.Toolbar.OffsetY">
            <summary>
            Sets the top offset of the toolbar.
            </summary>
        </member>
        <member name="P:ApexCharts.Toolbar.Show">
            <summary>
            Display the toolbar / menu in the top right corner.
            </summary>
        </member>
        <member name="P:ApexCharts.Toolbar.Tools">
            <inheritdoc cref="T:ApexCharts.Tools" />
        </member>
        <member name="P:ApexCharts.Toolbar.Export">
            <inheritdoc cref="T:ApexCharts.ExportOptions" />
        </member>
        <member name="T:ApexCharts.Tools">
            <summary>
            Defines the options to display the toolbar with
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.CustomIcons">
            <inheritdoc cref="T:ApexCharts.ToolCustomIcon" />
        </member>
        <member name="P:ApexCharts.Tools.Download">
            <summary>
            Show the download menu / hamburger icon in the toolbar. If you want to display a custom icon instead of hamburger icon, you can provide HTML string in this property.
            
            <code>
            download: true 
            download: '&lt;img src="/static/icons/download.png" class="ico-download" width="20"&gt;'
            </code>
            
            ApexCharts has built-in support to allow exporting the chart to popular image formats like PNG or SVG and also allows exporting the chart data to a CSV file.
            By default, all XY charts have the toolbar enabled in them which has a hamburger icon at the top right corner. Clicking the hamburger icon opens a menu which has following options to download.
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.Pan">
            <summary>
            Show the panning icon in the toolbar.
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.Reset">
            <summary>
            Reset the chart data to it's initial state after zommin/zoomout/panning. If you want to display a custom icon for reset, you can provide HTML string in this property.
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.Selection">
            <summary>
            Show the rectangle selection icon in the toolbar. If you want to display a custom icon for selection, you can provide HTML string in this property.
            </summary>
            <remarks>
            Make sure to also enable <see cref="P:ApexCharts.Chart.Selection"/> when showing the selection tool.
            </remarks>
        </member>
        <member name="P:ApexCharts.Tools.Zoom">
            <summary>
            Show the zoom icon which is used for zooming by dragging selection on the chart area. If you want to display a custom icon for zoom, you can provide HTML string in this property.
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.Zoomin">
            <summary>
            Show the zoom-in icon which zooms in 50% from the visible chart area. If you want to display a custom icon for zoom-in, you can provide HTML string in this property.
            </summary>
        </member>
        <member name="P:ApexCharts.Tools.Zoomout">
            <summary>
            Show the zoom-out icon which zooms out 50% from the visible chart area. If you want to display a custom icon for zoom-out, you can provide HTML string in this property.
            </summary>
        </member>
        <member name="T:ApexCharts.ToolCustomIcon">
            <summary>
            Allows to add additional icon buttons in the toolbar. In the below example, index should be used to place at a particular position in the toolbar.
            </summary>
        </member>
        <member name="P:ApexCharts.ToolCustomIcon.Icon">
            <summary>
            URL for the icon to display
            </summary>
        </member>
        <member name="P:ApexCharts.ToolCustomIcon.Index">
            <summary>
            Ordering within the group of icons
            </summary>
        </member>
        <member name="P:ApexCharts.ToolCustomIcon.Title">
            <summary>
            Tooltip to display for the icon
            </summary>
        </member>
        <member name="P:ApexCharts.ToolCustomIcon.Class">
            <summary>
            A CSS class to apply to the icon
            </summary>
        </member>
        <member name="T:ApexCharts.Zoom">
            <summary>
            Defines options to configure how zooming works on the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/chart/zoom">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Zoom.AutoScaleYaxis">
            <summary>
            When this option is turned on, the chart's y-axis re-scales to a new low and high based on the visible area. Helpful in situations where the user zoomed in to a small area to get a better view.
            </summary>
            <remarks>
            Known Issue: This option doesn't work in a multi-axis chart (when you have more than 1 y-axis)
            </remarks>
        </member>
        <member name="P:ApexCharts.Zoom.Enabled">
            <summary>
            To allow zooming in axis charts.
            </summary>
            <remarks>
            Note: In a category x-axis chart, to enable zooming, you will also need to set <see cref="P:ApexCharts.XAxis.TickPlacement"/>: '<see cref="F:ApexCharts.TickPlacement.On"/>'. Read more on the <see href="https://apexcharts.com/docs/zooming-in-category-x-axis">Category Axis Zoom</see> tutorial.
            </remarks>
        </member>
        <member name="P:ApexCharts.Zoom.Type">
            <summary>
            Allow zooming either on both x-axis, y-axis or on both axis.
            </summary>
            <remarks>
            Known Issue: In <see href="https://apexcharts.com/javascript-chart-demos/line-charts/syncing-charts">synchronized charts</see>, <see cref="F:ApexCharts.ZoomType.Xy"/> or <see cref="F:ApexCharts.ZoomType.Y"/> will not update charts in sync, while <see cref="F:ApexCharts.ZoomType.X"/> will work correctly.
            </remarks>
        </member>
        <member name="P:ApexCharts.Zoom.ZoomedArea">
            <inheritdoc cref="T:ApexCharts.ZoomedArea" />
        </member>
        <member name="T:ApexCharts.ZoomedArea">
            <summary>
            Zoomed Area is the area which is drawn when a user drags the mouse from one point to another
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedArea.Fill">
            <inheritdoc cref="T:ApexCharts.ZoomedAreaFill" />
        </member>
        <member name="P:ApexCharts.ZoomedArea.Stroke">
            <inheritdoc cref="T:ApexCharts.ZoomedAreaStroke" />
        </member>
        <member name="T:ApexCharts.ZoomedAreaFill">
            <summary>
            Defines how to style the fill for the zoomed area of the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedAreaFill.Color">
            <summary>
            Background color of the selection zoomed area
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedAreaFill.Opacity">
            <summary>
            Sets the transparency level of the selection fill
            </summary>
        </member>
        <member name="T:ApexCharts.ZoomedAreaStroke">
            <summary>
            Defines how to style the stroke for the zoomed area of the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedAreaStroke.Color">
            <summary>
            Border color of the selection zoomed area
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedAreaStroke.Opacity">
            <summary>
            Sets the transparency level of the selection border
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedAreaStroke.Width">
            <summary>
            Sets the width selection border
            </summary>
        </member>
        <member name="T:ApexCharts.DataLabels">
            <summary>
            Data Labels are the actual values which are passed in the series. You can add formatters which will allow you to modify values before displaying.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/datalabels">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/datalabels">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.DataLabels.Background">
            <inheritdoc cref="T:ApexCharts.DataLabelsBackground"/>
        </member>
        <member name="P:ApexCharts.DataLabels.Distributed">
            <summary>
            Similar to plotOptions.bar.distributed, this option makes each data-label discrete. So, when you provide an array of colors in datalabels.style.colors, the index in the colors array correlates with individual data-label index of all series.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.DropShadow">
            <inheritdoc cref="T:ApexCharts.DropShadow"/>
        </member>
        <member name="P:ApexCharts.DataLabels.Enabled">
            <summary>
            To determine whether to show dataLabels or not
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.EnabledOnSeries">
            <summary>
            Allows showing series only on specific series in a multi-series chart. For eg., if you have a line and a column chart, you can show dataLabels only on the line chart by specifying it's index in this array property.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.OffsetX">
            <summary>
            Sets the left offset for dataLabels
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.OffsetY">
            <summary>
            Sets the top offset for dataLabels
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.Style">
            <inheritdoc cref="T:ApexCharts.DataLabelsStyle"/>
        </member>
        <member name="P:ApexCharts.DataLabels.TextAnchor">
            <summary>
            The alignment of text relative to dataLabel's drawing position
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabels.Formatter">
            <summary>
            The formatter function allows you to modify the value before displaying. Example:
            
            <code>
            formatter: function(value, { seriesIndex, dataPointIndex, w }) {
                return w.config.series[seriesIndex].name + ":  " + value
            }
            </code>
            
            In the code above, seriesIndex is useful in multi-series chart, while dataPointIndex is the index of data-point in that series. w is an object consisting all globals and configuration which can be utilized the way mentioned in the above code.
            </summary>
        </member>
        <member name="T:ApexCharts.DataLabelsBackground">
            <summary>
            Defines the styling options to apply to the background for data labels
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.BorderColor">
            <summary>
            Border color of the background rect.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.BorderRadius">
            <summary>
            Border radius of the background rect.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.BorderWidth">
            <summary>
            Border width of the background rect.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.DropShadow">
            <inheritdoc cref="T:ApexCharts.DropShadow" />
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.Enabled">
            <summary>
            Should draw a background rectangle around the label
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.ForeColor">
            <summary>
            Color of the label when background is enabled. This will override the <see cref="P:ApexCharts.DataLabelsStyle.Colors"/>.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.Opacity">
            <summary>
            Opacity of the background color.
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsBackground.Padding">
            <summary>
            The amount of padding to apply to the data label background
            </summary>
        </member>
        <member name="T:ApexCharts.DataLabelsStyle">
            <summary>
            Defines the styling options to apply to the data labels
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsStyle.Colors">
            <summary>
            Fore colors for the dataLabels. Accepts an array of string colors (['#333', '#999']) or an array of functions ([function(opts) { return '#333' }]) (Each index in the array corresponds to the series).
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsStyle.FontFamily">
            <summary>
            Font family for the label
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsStyle.FontSize">
            <summary>
            Font size for the label
            </summary>
        </member>
        <member name="P:ApexCharts.DataLabelsStyle.FontWeight">
            <summary>
            Font weight for the label. Can be String ('bold') or number (400/500)
            </summary>
        </member>
        <member name="T:ApexCharts.Fill">
            <summary>
            Class to define how the generated chart will be styled.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/fill">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Fill.Colors">
            <summary>
            Colors to fill the svg paths. Each index in the array corresponds to the series-index. Example:
            
            <code>
            fill: {
                colors: ['#1A73E8', '#B32824']
            }
            </code>
            
            Alternatively, if you are rendering a bar/pie/donut/radialBar chart, you can pass a function which returns color based on value. Example:
            
            <code>
            fill: {
                colors: [function({ value, seriesIndex, w }) {
                    if(value &lt; 55) {
                        return '#7E36AF'
                    } else if (value &gt;= 55 &amp;&amp; value &lt; 80) {
                        return '#164666'
                    } else {
                        return '#D9534F'
                    }
                }]
            }
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.Fill.Gradient">
            <inheritdoc cref="T:ApexCharts.FillGradient"/>
        </member>
        <member name="P:ApexCharts.Fill.Image">
            <inheritdoc cref="T:ApexCharts.FillImage"/>
        </member>
        <member name="P:ApexCharts.Fill.Opacity">
            <summary>
            Opacity of the fill attribute.
            </summary>
        </member>
        <member name="P:ApexCharts.Fill.Pattern">
            <inheritdoc cref="T:ApexCharts.FillPattern"/>
        </member>
        <member name="P:ApexCharts.Fill.Type">
            <summary>
            Whether to fill the paths with solid colors or gradient.
            </summary>
        </member>
        <member name="T:ApexCharts.FillType">
            <summary>
            A list of fill options for charts
            </summary>
        </member>
        <member name="T:ApexCharts.GradientShade">
            <summary>
            A list of gradient options for chart fills
            </summary>
        </member>
        <member name="T:ApexCharts.GradientType">
            <summary>
            A list of gradient types for chart fills
            </summary>
        </member>
        <member name="T:ApexCharts.FillGradient">
            <summary>
            Defines the styling options to use when filling a chart with a gradient. <see href="https://codepen.io/apexcharts/pen/GQmoXP">Example</see>
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.GradientToColors">
            <summary>
            Optional colors that ends the gradient to. The main colors array becomes the gradientFromColors and this array becomes the end colors of the gradient. Each index in the array corresponds to the series-index.
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.InverseColors">
            <summary>
            Inverse the start and end colors of the gradient.
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.OpacityFrom">
            <summary>
            Start color's opacity. If you want different opacity for different series, you can pass an array of numbers. For eg., opacityFrom: [0.2, 0.8]
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.OpacityTo">
            <summary>
            End color's opacity
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.Shade">
            <summary>
            The option to use for shading the gradient
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.ShadeIntensity">
            <summary>
            Intensity of the gradient shade. Accepts from 0 to 1
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.Stops">
            <summary>
            Stops defines the ramp of colors to use on a gradient
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.Type">
            <summary>
            The type of gradient to generate
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradient.ColorStops">
            <inheritdoc cref="T:ApexCharts.FillGradientStops"/>
        </member>
        <member name="T:ApexCharts.FillGradientStops">
            <summary>
            Override everything and define your own stops with unlimited color stops. <see href="https://codepen.io/apexcharts/pen/RvqdPb">Codepen Example</see>
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradientStops.Offset">
            <summary>
            The location within the chart to apply the gradient stop at
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradientStops.Color">
            <summary>
            The color to apply at the gradient stop
            </summary>
        </member>
        <member name="P:ApexCharts.FillGradientStops.Opacity">
            <summary>
            The opacity to apply at the gradient stop. Accepts values from 0 to 1
            </summary>
        </member>
        <member name="T:ApexCharts.FillImage">
            <summary>
            Defines the styling options to use when filling a chart with an image
            </summary>
        </member>
        <member name="P:ApexCharts.FillImage.Height">
            <summary>
            Height of each image for all the series
            </summary>
        </member>
        <member name="P:ApexCharts.FillImage.Src">
            <summary>
            Src accepts an array of image paths which will correspond to each series.
            </summary>
        </member>
        <member name="P:ApexCharts.FillImage.Width">
            <summary>
            Width of each image for all the series
            </summary>
        </member>
        <member name="T:ApexCharts.FillPattern">
            <summary>
            Defines the styling options to use when filling a chart with a pattern
            </summary>
        </member>
        <member name="P:ApexCharts.FillPattern.Height">
            <summary>
            Pattern height which will be repeated at this interval
            </summary>
        </member>
        <member name="P:ApexCharts.FillPattern.StrokeWidth">
            <summary>
            Pattern lines width indicates the thickness of the stroke of pattern.
            </summary>
        </member>
        <member name="P:ApexCharts.FillPattern.Style">
            <summary>
            The type of pattern to fill the chart with
            </summary>
        </member>
        <member name="P:ApexCharts.FillPattern.Width">
            <summary>
            Pattern width which will be repeated at this interval
            </summary>
        </member>
        <member name="T:ApexCharts.FillPatternStyle">
            <summary>
            A list of fill options for pattern-based fills
            </summary>
        </member>
        <member name="T:ApexCharts.Grid">
            <summary>
            Grid is the plot area excluding legends, title, subtitle, x-axis, and y-axis. Grid's coordinates are used extensively in calculations in the chart in determining where to plot the actual chart elements.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/grid">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/grid">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Grid.BorderColor">
            <summary>
            Colors of grid borders / lines
            </summary>
        </member>
        <member name="P:ApexCharts.Grid.Column">
            <inheritdoc cref="T:ApexCharts.GridColumn"/>
        </member>
        <member name="P:ApexCharts.Grid.Padding">
            <inheritdoc cref="T:ApexCharts.Padding"/>
        </member>
        <member name="P:ApexCharts.Grid.Position">
            <summary>
            Whether to place grid behind chart paths of in front.
            </summary>
        </member>
        <member name="P:ApexCharts.Grid.Row">
            <inheritdoc cref="T:ApexCharts.GridRow"/>
        </member>
        <member name="P:ApexCharts.Grid.Show">
            <summary>
            To show or hide grid area (including xaxis / yaxis)
            </summary>
        </member>
        <member name="P:ApexCharts.Grid.StrokeDashArray">
            <summary>
            Creates dashes in borders of svg path. Higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.Grid.Xaxis">
            <inheritdoc cref="T:ApexCharts.GridXAxis"/>
        </member>
        <member name="P:ApexCharts.Grid.Yaxis">
            <inheritdoc cref="T:ApexCharts.GridYAxis"/>
        </member>
        <member name="T:ApexCharts.GridColumn">
            <summary>
            Defines how to style the columns for the grid
            </summary>
        </member>
        <member name="P:ApexCharts.GridColumn.Colors">
            <summary>
            Grid background colors filling in column pattern. Each column will be filled with colors based on the index in this array. If less colors are specified, colors are repeated.
            </summary>
        </member>
        <member name="P:ApexCharts.GridColumn.Opacity">
            <summary>
            Opacity of the column background colors. Accepts values from 0 to 1
            </summary>
        </member>
        <member name="T:ApexCharts.GridRow">
            <summary>
            Defines how to style the rows for the grid
            </summary>
        </member>
        <member name="P:ApexCharts.GridRow.Colors">
            <summary>
            Grid background colors filling in row pattern. Each row will be filled with colors based on the index in this array. If less colors are specified, colors are repeated.
            </summary>
        </member>
        <member name="P:ApexCharts.GridRow.Opacity">
            <summary>
            Opacity of the row background colors. Accepts values from 0 to 1
            </summary>
        </member>
        <member name="T:ApexCharts.GridXAxis">
            <summary>
            Defines how to style the X-axis for the grid
            </summary>
        </member>
        <member name="P:ApexCharts.GridXAxis.Lines">
            <inheritdoc cref="T:ApexCharts.Lines" />
        </member>
        <member name="T:ApexCharts.Lines">
            <summary>
            Defines options for grid lines
            </summary>
        </member>
        <member name="P:ApexCharts.Lines.Show">
            <summary>
            Whether to show / hide y-axis lines
            </summary>
        </member>
        <member name="T:ApexCharts.GridYAxis">
            <summary>
            Defines how to style the Y-axis for the grid
            </summary>
        </member>
        <member name="P:ApexCharts.GridYAxis.Lines">
            <inheritdoc cref="T:ApexCharts.Lines" />
        </member>
        <member name="T:ApexCharts.Legend">
            <summary>
            When there are multiple dataSeries in the chart, legends help to identify each dataSeries with a predefined symbol and name of the series.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/legend">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/legend">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/legend">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Legend.Floating">
            <summary>
            The floating option will take out the legend from the chart area and make it float above the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.FontFamily">
            <summary>
            Sets the font-family of legend text elements
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.FontSize">
            <summary>
            Sets the fontSize of legend text elements
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.FontWeight">
            <summary>
            Sets the font-weight of legend text elements
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.Height">
            <summary>
            Sets the height for legend container
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.HorizontalAlign">
            <summary>
            Available options for horizontal alignment
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.InverseOrder">
            <summary>
            Inverse the placement ordering of the legend items.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.ItemMargin">
            <inheritdoc cref="T:ApexCharts.LegendItemMargin"/>
        </member>
        <member name="P:ApexCharts.Legend.Labels">
            <inheritdoc cref="T:ApexCharts.LegendLabels"/>
        </member>
        <member name="P:ApexCharts.Legend.Markers">
            <inheritdoc cref="T:ApexCharts.LegendMarkers"/>
        </member>
        <member name="P:ApexCharts.Legend.OffsetX">
            <summary>
            Sets the left offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.OffsetY">
            <summary>
            Sets the top offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.OnItemClick">
            <inheritdoc cref="T:ApexCharts.LegendOnItemClick"/>
        </member>
        <member name="P:ApexCharts.Legend.OnItemHover">
            <inheritdoc cref="T:ApexCharts.LegendOnItemHover"/>
        </member>
        <member name="P:ApexCharts.Legend.Position">
            <summary>
            Available position options for legend
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.Show">
            <summary>
            Whether to show or hide the legend container.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.ShowForNullSeries">
            <summary>
            Allows you to hide a particular legend if it's series contains all null values.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.ShowForSingleSeries">
            <summary>
            Show legend even if there is just 1 series.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.ShowForZeroSeries">
            <summary>
            Allows you to hide a particular legend if it's series contains all 0 values.
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.Width">
            <summary>
            Sets the width for legend container
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.Formatter">
            <summary>
            A custom formatter function to append additional text to the legend series names. Example:
            
            <code>
            legend: {
                formatter: function(seriesName, opts) {
                    return [seriesName, " - ", opts.w.globals.series[opts.seriesIndex]]
                }
            },
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.Legend.TooltipHoverFormatter">
            <summary>
            A formatter function to allow showing data values in the legend while hovering on the chart. This can be useful when you have multiple series, and you don't want to show tooltips for each series together. Example:
            
            <code>
            legend: {
                tooltipHoverFormatter: function(seriesName, opts) {
                    return seriesName + ' - &lt;strong&gt;' + opts.w.globals.series[opts.seriesIndex][opts.dataPointIndex] + '&lt;/strong&gt;'
                }
            },
            </code>
            </summary>
            <remarks>
            Note: This feature is only available in shared tooltips (when you have <see cref="P:ApexCharts.Tooltip.Shared"/>: <see langword="true"/>).
            </remarks>
        </member>
        <member name="P:ApexCharts.Legend.CustomLegendItems">
            <summary>
            Allows you to overwrite the default legend items with this customized set of labels. Please note that the click/hover events of the legend will stop working if you provide these custom legend labels.
            </summary>
        </member>
        <member name="T:ApexCharts.LegendItemMargin">
            <summary>
            Defines the margin to apply to legend items
            </summary>
        </member>
        <member name="P:ApexCharts.LegendItemMargin.Horizontal">
            <summary>
            Horizontal margin for individual legend item.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendItemMargin.Vertical">
            <summary>
            Vertical margin for individual legend item.
            </summary>
        </member>
        <member name="T:ApexCharts.LegendLabels">
            <summary>
            Defines the styling to apply to legend item labels
            </summary>
        </member>
        <member name="P:ApexCharts.LegendLabels.Colors">
            <summary>
            Custom text colors for legend labels. Accepts an array of colors where each index corresponds to the series index
            </summary>
        </member>
        <member name="P:ApexCharts.LegendLabels.UseSeriesColors">
            <summary>
            Whether to use primary <see href="https://apexcharts.com/docs/colors">colors</see> or not.
            </summary>
        </member>
        <member name="T:ApexCharts.LegendMarkers">
            <summary>
            Defines the styling to apply to legend item markers
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.FillColors">
            <summary>
            Fill Colors of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.Height">
            <summary>
            Height of the marker.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.OffsetX">
            <summary>
            Sets the left offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.OffsetY">
            <summary>
            Sets the top offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.Radius">
            <summary>
            Border Radius of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.StrokeColor">
            <summary>
            Stroke Color of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.StrokeWidth">
            <summary>
            Stroke Size of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.Width">
            <summary>
            Width of the marker that appears before series name.
            </summary>
        </member>
        <member name="P:ApexCharts.LegendMarkers.CustomHTML">
            <summary>
            Custom HTML element to put in place of marker.
            
            <code>
            markers: {
                customHTML: function() {
                    return '&lt;span class="custom-marker"&gt;&lt;i class="fas fa-chart-pie"&gt;&lt;/i&gt;&lt;/span&gt;'
                }
            }
            </code>
            </summary>
        </member>
        <member name="T:ApexCharts.LegendOnItemClick">
            <summary>
            Defines options to execute for when a legend item is clicked
            </summary>
        </member>
        <member name="P:ApexCharts.LegendOnItemClick.ToggleDataSeries">
            <summary>
            When clicked on legend item, it will toggle the visibility of the series in chart.
            </summary>
        </member>
        <member name="T:ApexCharts.LegendOnItemHover">
            <summary>
            Defines options to execute for when a legend item is hovered
            </summary>
        </member>
        <member name="P:ApexCharts.LegendOnItemHover.HighlightDataSeries">
            <summary>
            When hovered on legend item, it will highlight the paths of the hovered series in chart.
            </summary>
        </member>
        <member name="T:ApexCharts.Markers">
            <summary>
            Class to define the visual appearance of the data point markers
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/markers">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Markers.Colors">
            <summary>
            Sets the fill color(s) of the marker point.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.Discrete">
            <summary>
            Allows you to target individual data-points and style particular marker differently. Example:
            
            <code>
            markers: {
                discrete: [{
                    seriesIndex: 0,
                    dataPointIndex: 7,
                    fillColor: '#e3e3e3',
                    strokeColor: '#fff',
                    size: 5,
                    shape: "circle"
                }, {
                    seriesIndex: 2,
                    dataPointIndex: 11,
                    fillColor: '#f7f4f3',
                    strokeColor: '#eee',
                    size: 4,
                    shape: "square"
                }]
            }
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.FillOpacity">
            <summary>
            Opacity of the marker fill color.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.Hover">
            <inheritdoc cref="T:ApexCharts.MarkersHover"/>
        </member>
        <member name="P:ApexCharts.Markers.OffsetX">
            <summary>
            Sets the left offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.OffsetY">
            <summary>
            Sets the top offset of the marker
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.Radius">
            <summary>
            Radius of the marker (applies to square shape)
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.Shape">
            <summary>
            Shape of the marker.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.ShowNullDataPoints">
            <summary>
            Whether to show markers for null values in a line/area chart. If disabled, any null values present in line/area charts will not be visible.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.Size">
            <inheritdoc cref="P:ApexCharts.Markers.JsonSize"/>
            <remarks>
            For single-series charts
            </remarks>
        </member>
        <member name="P:ApexCharts.Markers.Sizes">
            <inheritdoc cref="P:ApexCharts.Markers.JsonSize"/>
            <remarks>
            For multi-series charts
            </remarks>
        </member>
        <member name="P:ApexCharts.Markers.JsonSize">
            <summary>
            Size of the marker point. In a multi-series chart, you can provide an array of numbers to display different size of markers on different series.
            </summary>
            <remarks>
            Set either <see cref="P:ApexCharts.Markers.Size"/> or <see cref="P:ApexCharts.Markers.Sizes"/>
            </remarks>
        </member>
        <member name="P:ApexCharts.Markers.StrokeColors">
            <summary>
            Stroke Color of the marker. Accepts a single color or an array of colors in a multi-series chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.StrokeDashArray">
            <summary>
            Dashes in the border around marker. Higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.StrokeOpacity">
            <summary>
            Opacity of the border around marker.
            </summary>
        </member>
        <member name="P:ApexCharts.Markers.StrokeWidth">
            <summary>
            Stroke Size of the marker.
            </summary>
        </member>
        <member name="T:ApexCharts.MarkersDiscrete">
            <summary>
            Allows you to target individual data-points and style particular markers differently
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.DataPointIndex">
            <summary>
            The index of the marker to apply styling to
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.FillColor">
            <summary>
            The color to fill the marker with
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.SeriesIndex">
            <summary>
            The index within the data series to apply styling to
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.Size">
            <summary>
            The size to apply to the marker
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.StrokeColor">
            <summary>
            The stroke color to apply to the marker
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersDiscrete.Shape">
            <summary>
            The type of shape to use for the marker
            </summary>
        </member>
        <member name="T:ApexCharts.MarkersHover">
            <summary>
            Defines styling properties for when a marker is hovered
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersHover.Size">
            <summary>
            Fixed size of the marker when it is active
            </summary>
        </member>
        <member name="P:ApexCharts.MarkersHover.SizeOffset">
            <summary>
            Unlike the fixed size, this option takes the original markers.size and increases/decreases the value based on it. So, if markers.size: 6, markers.hover.sizeOffset: 3 will make the marker's size 9 when hovered.
            </summary>
        </member>
        <member name="T:ApexCharts.NoData">
            <summary>
            Class to define information to display when no data is available for the chart. Useful when loading data from external sources.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/chart-data">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/nodata">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.NoData.Align">
            <summary>
            Determines where to display the loading message
            </summary>
        </member>
        <member name="P:ApexCharts.NoData.OffsetX">
            <summary>
            Text offset from left
            </summary>
        </member>
        <member name="P:ApexCharts.NoData.OffsetY">
            <summary>
            Text offset from top
            </summary>
        </member>
        <member name="P:ApexCharts.NoData.Style">
            <inheritdoc cref="T:ApexCharts.NoDataStyle"/>
        </member>
        <member name="P:ApexCharts.NoData.Text">
            <summary>
            The text to display when no-data is available. Defaults to undefined which displays nothing.
            </summary>
        </member>
        <member name="P:ApexCharts.NoData.VerticalAlign">
            <summary>
            Determines where to display the loading message
            </summary>
        </member>
        <member name="T:ApexCharts.NoDataStyle">
            <summary>
            Styling options to apply when there is no data in the chart
            </summary>
        </member>
        <member name="P:ApexCharts.NoDataStyle.Color">
            <summary>
            Fore color of the text
            </summary>
        </member>
        <member name="P:ApexCharts.NoDataStyle.FontFamily">
            <summary>
            Font family of the text
            </summary>
        </member>
        <member name="P:ApexCharts.NoDataStyle.FontSize">
            <summary>
            Font size of the text
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptions">
            <summary>
            Container class to store options for each specific type of chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/plotoptions">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptions.BoxPlot">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBoxPlot" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Bar">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBar" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Bubble">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBubble" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Candlestick">
            <inheritdoc cref="T:ApexCharts.PlotOptionsCandlestick" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Heatmap">
            <inheritdoc cref="T:ApexCharts.PlotOptionsHeatmap" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Pie">
            <inheritdoc cref="T:ApexCharts.PlotOptionsPie" />
        </member>
        <member name="P:ApexCharts.PlotOptions.PolarArea">
            <inheritdoc cref="T:ApexCharts.PlotOptionsPolarArea" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Radar">
            <inheritdoc cref="T:ApexCharts.PlotOptionsRadar" />
        </member>
        <member name="P:ApexCharts.PlotOptions.RadialBar">
            <inheritdoc cref="T:ApexCharts.PlotOptionsRadialBar" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Treemap">
            <inheritdoc cref="T:ApexCharts.PlotOptionsTreemap" />
        </member>
        <member name="P:ApexCharts.PlotOptions.Area">
            <inheritdoc cref="T:ApexCharts.PlotOptionsArea" />
        </member>
        <member name="T:ApexCharts.PlotOptionsArea">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Area"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/area-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/area-chart">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/area">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsArea.FillTo">
            <summary>
            When negative values are present in the area chart, this option fill the area either from 0 (origin) or from the end of the chart as illustrated below.
            </summary>
        </member>
        <member name="T:ApexCharts.AreaFillTo">
            <summary>
            A list of fill options
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsBoxPlot">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.BoxPlot"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/boxplot-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/boxplot">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/boxplot">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsBoxPlot.Colors">
            <inheritdoc cref="T:ApexCharts.BloxPlotColors" />
        </member>
        <member name="T:ApexCharts.BloxPlotColors">
            <summary>
            Defines colors to apply to the box plot chart
            </summary>
        </member>
        <member name="P:ApexCharts.BloxPlotColors.Upper">
            <summary>
            Color for the upper quartile (Q3 to median) of the box plot.
            </summary>
        </member>
        <member name="P:ApexCharts.BloxPlotColors.Lower">
            <summary>
            Color for the lower quartile (median to Q1) of the box plot.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsBar">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Bar"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/bar-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/bar-chart">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/bar">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.Horizontal">
            <summary>
            This option will turn a column chart into a horizontal bar chart.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.BorderRadius">
            <summary>
            Rounded corners around the bars/columns.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.BorderRadiusApplication">
            <summary>
            Whether to apply border-radius around both ends or only to single end
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.BorderRadiusWhenStacked">
            <summary>
            Whether to apply border-radius to all bars or only to the data-set that is drawn last
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.ColumnWidth">
            <summary>
            In column charts, columnWidth is the percentage of the available width in the grid-rect. Accepts '0%' to '100%'
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.BarHeight">
            <summary>
            In horizontal bar charts, barHeight is the percentage of the available height in the grid-rect. Accepts '0%' to '100%'
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.Distributed">
            <summary>
            Turn this option to make the bars discrete. Each value indicates one bar per series.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.RangeBarOverlap">
            <summary>
            In a range-Bar / timeline chart, the bars should overlap over each other instead of stacking if this option is enabled.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.RangeBarGroupRows">
            <summary>
            In a multi-series range-Bar / timeline chart, group rows (horizontal bars) together instead of stacking up. Helpful when there are no overlapping rows but distinct values.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.HideZeroBarsWhenGrouped">
            <summary>
            In a non-stacked (grouped or clustered) bar chart, do not occupy space for those bars whose value is zero.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.IsDumbbell">
            <summary>
            Is chart a dumbbell
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.DumbbellColors">
            <summary>
            When dumbbell chart is enabled, use this option to set custom colors for the dots at the starting and ending shape.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.IsFunnel">
            <summary>
            Is chart funnel
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.IsFunnel3d">
            <summary>
            Chart is funnel 3D
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.Colors">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBarColors" />
        </member>
        <member name="P:ApexCharts.PlotOptionsBar.DataLabels">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBarDataLabels" />
        </member>
        <member name="T:ApexCharts.BorderRadiusApplication">
            <summary>
            A list of border radius options
            </summary>
        </member>
        <member name="T:ApexCharts.BorderRadiusWhenStacked">
            <summary>
            A list of border radius options
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsBarColors">
            <summary>
            Defines how to color the bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColors.BackgroundBarColors">
            <summary>
            Custom colors for background rects. The number of colors in the array is repeated if fewer colors than data points are specified.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColors.BackgroundBarOpacity">
            <summary>
            Opacity for background colors of the bar
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColors.BackgroundBarRadius">
            <summary>
            Border radius for background rect of the bar
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColors.Ranges">
            <inheritdoc cref="T:ApexCharts.PlotOptionsBarColorRange" />
        </member>
        <member name="T:ApexCharts.PlotOptionsBarColorRange">
            <summary>
            Sets the portion of the bar chart to color
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColorRange.Color">
            <summary>
            Color to fill the range with
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColorRange.From">
            <summary>
            Value indicating range's upper limit
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarColorRange.To">
            <summary>
            Value indicating range's lower limit
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsBarDataLabels">
            <summary>
            Defines text to display with bars in the bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarDataLabels.HideOverflowingLabels">
            <summary>
            When there are values that are very close to one another, this property prevents it by hiding overlapping labels. Note: This affects only stacked charts
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarDataLabels.MaxItems">
            <summary>
            Maximum limit of data-labels that can be displayed on a bar chart. If data-points exceed this number, data-labels won't be shown.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarDataLabels.Orientation">
            <summary>
            How to display the text
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarDataLabels.Position">
            <summary>
            Where to display the text
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBarDataLabels.Total">
            <inheritdoc cref="T:ApexCharts.BarTotalDataLabels" />
        </member>
        <member name="T:ApexCharts.BarTotalDataLabels">
            <summary>
            Defines how to display total values for the bars in the bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.BarTotalDataLabels.Enabled">
            <summary>
            Enable total data-label in stacked bar charts which adds all the values of the category for those stacked data-sets
            </summary>
        </member>
        <member name="P:ApexCharts.BarTotalDataLabels.Formatter">
            <summary>
            Applies a custom function for the total value. The function accepts 2 params where the 1st one is the value while the 2nd one is the config object.
            </summary>
        </member>
        <member name="P:ApexCharts.BarTotalDataLabels.OffsetX">
            <summary>
            Sets the left offset of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.BarTotalDataLabels.OffsetY">
            <summary>
            Sets the top offset of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.BarTotalDataLabels.Style">
            <inheritdoc cref="T:ApexCharts.BarDataLabelsStyle" />
        </member>
        <member name="T:ApexCharts.BarDataLabelsStyle">
            <summary>
            Defines how to style the bar chart total labels
            </summary>
        </member>
        <member name="P:ApexCharts.BarDataLabelsStyle.Color">
            <summary>
            Color of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.BarDataLabelsStyle.FontSize">
            <summary>
            Font size of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.BarDataLabelsStyle.FontFamily">
            <summary>
            Font family of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.BarDataLabelsStyle.FontWeight">
            <summary>
            Font-weight of the total label
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsBubble">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Bubble"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/bubble-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/bubble">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsBubble.ZScaling">
            <summary>
            zScaling controls whether to draw the bubbles of different size (based on z value) or to draw same size bubbles (helpful in case your data-set contains values that extends to extreme ends)
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBubble.MaxBubbleRadius">
            <summary>
            Maximum radius size of a bubble. If a bubble value is too large to cover the chart, this size will be used.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsBubble.MinBubbleRadius">
            <summary>
            Minimum radius size of a bubble. If a bubble value is too small to be displayed, this size will be used.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsCandlestick">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Candlestick"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/candlestick-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/candlestick">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/candlestick">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsCandlestick.Colors">
            <inheritdoc cref="T:ApexCharts.PlotOptionsCandlestickColors" />
        </member>
        <member name="P:ApexCharts.PlotOptionsCandlestick.Wick">
            <inheritdoc cref="T:ApexCharts.PlotOptionsCandlestickWick" />
        </member>
        <member name="T:ApexCharts.PlotOptionsCandlestickColors">
            <summary>
            The colors to use for data points on the candlestick chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsCandlestickColors.Downward">
            <summary>
            Color for the downward candle when the value/price closed below where it opened. Usually, a red color is used for this downward candle.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsCandlestickColors.Upward">
            <summary>
            Color for the upward candle when the value/price closed above where it opened. Usually, a green color is used for this upward candle.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsCandlestickWick">
            <summary>
            Defines how to style the wick portion of the candlestick chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsCandlestickWick.UseFillColor">
            <summary>
            Use the same fill color for the wick. If this is false, the color of the wick falls back to the stroke.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsHeatmap">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Heatmap"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/heatmap-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/heatmap-chart">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/heatmap">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.ColorScale">
            <inheritdoc cref="T:ApexCharts.PlotOptionsHeatmapColorScale" />
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.Distributed">
            <summary>
            When turned on, each row in a heatmap will have it's own lowest and highest range and colors will be shaded for each series. Default value is turned off.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.EnableShades">
            <summary>
            Enable different shades of color depending on the value
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.Radius">
            <summary>
            Radius of the rectangle inside heatmap
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.ReverseNegativeShade">
            <summary>
            When enabled, it will reverse the shades for negatives but keep the positive shades as it is now. An example of such use-case would be in a profit/loss chart where darker reds mean larger losses, darker greens mean larger gains.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.ShadeIntensity">
            <summary>
            The intensity of the shades generated for each value. Accepts from 0 to 1
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmap.UseFillColorAsStroke">
            <summary>
            If turned on, the stroke/border around the heatmap cell has the same color as the cell color.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsHeatmapColorScale">
            <summary>
            Defines how to color datapoints on the heatmap chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScale.Inverse">
            <summary>
            In a multiple series heatmap, flip the color-scale to fill the heatmaps vertically instead of horizontally.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScale.Max">
            <summary>
            Specify the higher range for heatmap color calculation.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScale.Min">
            <summary>
            Specify the lower range for heatmap color calculation.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScale.Ranges">
            <inheritdoc cref="T:ApexCharts.PlotOptionsHeatmapColorScaleRange" />
        </member>
        <member name="T:ApexCharts.PlotOptionsHeatmapColorScaleRange">
            <summary>
            Defines zones to apply a color to on the heatmap chart
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScaleRange.Color">
            <summary>
            Background color to fill the range with.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScaleRange.ForeColor">
            <summary>
            Fore Color of the text if data-labels is enabled.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScaleRange.From">
            <summary>
            Value indicating range's upper limit
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScaleRange.Name">
            <summary>
            If a name is provided, it will be used in the legend. If it is not provided, the text falls back to {from} - {to}
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsHeatmapColorScaleRange.To">
            <summary>
            Value indicating range's lower limit
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsPie">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Pie"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/pie-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/pie-donut">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/pie">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.StartAngle">
            <summary>
            A custom angle from which the pie/donut slices should start.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.EndAngle">
            <summary>
            A custom angle to which the pie/donut slices should end.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.CustomScale">
            <summary>
            Transform the scale of whole pie/donut overriding the default calculations. Try variations like 0.5 and 1.5 to see how it scales based on the default width/height of the pie
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.DataLabels">
            <inheritdoc cref="T:ApexCharts.PieDataLabels" />
            <remarks>
            All additional formatting/styling settings for dataLabels has to be done in <see cref="P:ApexCharts.ApexChartOptions`1.DataLabels"/> configuration.
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.Donut">
            <inheritdoc cref="T:ApexCharts.PlotOptionsDonut" />
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.ExpandOnClick">
            <summary>
            When clicked on the pie/donut slice, expand the slice to make it distinguished visually.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.OffsetX">
            <summary>
            Sets the left offset of the whole pie area
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsPie.OffsetY">
            <summary>
            Sets the top offset of the whole pie area
            </summary>
        </member>
        <member name="T:ApexCharts.PieDataLabels">
            <summary>
            Defines how to display labels on the pie chart
            </summary>
        </member>
        <member name="P:ApexCharts.PieDataLabels.MinAngleToShowLabel">
            <summary>
            Minimum angle to allow data-labels to show. If the slice angle is less than this number, the label would not show to prevent overlapping issues.
            </summary>
        </member>
        <member name="P:ApexCharts.PieDataLabels.Offset">
            <summary>
            Offset by which labels will move outside / inside of the donut area
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsDonut">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Donut"/>. The <see cref="T:ApexCharts.PlotOptionsPie"/> may also be used for donut charts.
            </summary>
            <remarks>
            
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/donut-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/pie-donut">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/pie">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsDonut.Background">
            <summary>
            The background color of the pie
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsDonut.Labels">
            <inheritdoc cref="T:ApexCharts.DonutLabels" />
        </member>
        <member name="P:ApexCharts.PlotOptionsDonut.Size">
            <summary>
            Donut / ring size in percentage relative to the total pie area.
            </summary>
        </member>
        <member name="T:ApexCharts.DonutLabels">
            <summary>
            Defines how to style text labels for each donut slice
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabels.Name">
            <inheritdoc cref="T:ApexCharts.DonutLabelName" />
        </member>
        <member name="P:ApexCharts.DonutLabels.Show">
            <summary>
            Whether to display inner labels or not.
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabels.Total">
            <inheritdoc cref="T:ApexCharts.DonutLabelTotal" />
        </member>
        <member name="P:ApexCharts.DonutLabels.Value">
            <inheritdoc cref="T:ApexCharts.DonutLabelValue" />
        </member>
        <member name="T:ApexCharts.DonutLabelName">
            <summary>
            Defines how to style the name of a donut label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.Color">
            <summary>
            Color of the name in the donut's label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.FontFamily">
            <summary>
            Font family of the name in donut's label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.FontSize">
            <summary>
            Font size of the name in donut's label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.FontWeight">
            <summary>
            Font-weight of the name in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.OffsetY">
            <summary>
            Sets the top offset for name
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.Show">
            <summary>
            Show the name of the respective bar associated with it's value
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelName.Formatter">
            <summary>
            A custom formatter function to apply on the name text in dataLabel
            </summary>
        </member>
        <member name="T:ApexCharts.DonutLabelTotal">
            <summary>
            Defines how to style the total label for a donut slice
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.Color">
            <summary>
            Color of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.FontFamily">
            <summary>
            Font family of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.FontSize">
            <summary>
            Font size of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.FontWeight">
            <summary>
            Font-weight of the total label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.Label">
            <summary>
            Label for "total". Defaults to "Total"
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.Show">
            <summary>
            Show the total of all the series in the inner area of radialBar
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.ShowAlways">
            <summary>
            Always show the total label and do not remove it even when user clicks/hovers over the slices.
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelTotal.Formatter">
            <summary>
            A custom formatter function to apply on the total value. It accepts one parameter w which contains the chart's config and global objects. Defaults to a total of all series percentage divided by the length of series.
            </summary>
        </member>
        <member name="T:ApexCharts.DonutLabelValue">
            <summary>
            Defines how to style the value portion for a donut slice
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.Color">
            <summary>
            Color of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.FontFamily">
            <summary>
            Font family of the value label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.FontSize">
            <summary>
            Font size of the value label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.FontWeight">
            <summary>
            Font weight of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.OffsetY">
            <summary>
            Sets the top offset for value label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.Show">
            <summary>
            Show the value label associated with the name label
            </summary>
        </member>
        <member name="P:ApexCharts.DonutLabelValue.Formatter">
            <summary>
            A custom formatter function to apply on the value label in dataLabel
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsPolarArea">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.PolarArea"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/plotoptions/polararea">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsPolarArea.Rings">
            <inheritdoc cref="T:ApexCharts.PolarAreaRings" />
        </member>
        <member name="P:ApexCharts.PlotOptionsPolarArea.Spokes">
            <inheritdoc cref="T:ApexCharts.PolarAreaSpokes" />
        </member>
        <member name="T:ApexCharts.PolarAreaRings">
            <summary>
            Defines how to style the rings in the polar area chart
            </summary>
        </member>
        <member name="P:ApexCharts.PolarAreaRings.StrokeColor">
            <summary>
            The line/border color of the rings of the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.PolarAreaRings.StrokeWidth">
            <summary>
            Border width of the rings of polarArea chart.
            </summary>
        </member>
        <member name="T:ApexCharts.PolarAreaSpokes">
            <summary>
            Defines how to style the spokes in the polar area chart
            </summary>
        </member>
        <member name="P:ApexCharts.PolarAreaSpokes.ConnectorColors">
            <summary>
            The line/border color of the spokes of polarArea chart.
            </summary>
        </member>
        <member name="P:ApexCharts.PolarAreaSpokes.StrokeWidth">
            <summary>
            Border width of the spokes of polarArea chart.
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsRadar">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.Radar"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/radar-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/radar">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/radar">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadar.OffsetX">
            <summary>
            Sets the left offset of the radar
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadar.OffsetY">
            <summary>
            Sets the top offset of the radar
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadar.Polygons">
            <inheritdoc cref="T:ApexCharts.RadarPolygons" />
        </member>
        <member name="P:ApexCharts.PlotOptionsRadar.Size">
            <summary>
            A custom size for the inner radar. The default size calculation will be overrided with this
            </summary>
        </member>
        <member name="T:ApexCharts.RadarPolygons">
            <summary>
            The style options to apply to the radar chart
            </summary>
        </member>
        <member name="P:ApexCharts.RadarPolygons.ConnectorColors">
            <summary>
            The line color of the connector lines of the polygons. If you want to pass more than 1 color, you can pass an array instead of a String. connectorColors: '#e8e8e8' and connectorColors: ['#e8e8e8', '#f1f1f1'] both are valid.
            </summary>
        </member>
        <member name="P:ApexCharts.RadarPolygons.Fill">
            <inheritdoc cref="T:ApexCharts.RadarPolygonsFill" />
        </member>
        <member name="P:ApexCharts.RadarPolygons.StrokeColors">
            <summary>
            The line/border color of the spokes of the chart excluding the connector lines. If you want to pass more than 1 color, you can pass an array instead of a String. strokeColors: '#e8e8e8' and strokeColors: ['#e8e8e8', '#f1f1f1'] both are valid.
            </summary>
        </member>
        <member name="P:ApexCharts.RadarPolygons.StrokeWidth">
            <summary>
            Border width of the spokes of radar chart.
            </summary>
        </member>
        <member name="T:ApexCharts.RadarPolygonsFill">
            <summary>
            Defines which colors to fill the radar chart with
            </summary>
        </member>
        <member name="P:ApexCharts.RadarPolygonsFill.Colors">
            <summary>
            The list of colors to apply to the radar chart
            </summary>
        </member>
        <member name="T:ApexCharts.PlotOptionsRadialBar">
            <summary>
            Defines options specific to <see cref="F:ApexCharts.ChartType.RadialBar"/>
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/radialbar-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/radialbar-gauge">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/plotoptions/radialbar">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.DataLabels">
            <inheritdoc cref="T:ApexCharts.RadialBarDataLabels" />
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.EndAngle">
            <summary>
            Angle to which the radialBars should end. The sum of the startAngle and endAngle should not exceed 360.
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.Hollow">
            <inheritdoc cref="T:ApexCharts.Hollow" />
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.InverseOrder">
            <summary>
            Whether to make the first value of series innermost or outermost
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.OffsetX">
            <summary>
            Sets the left offset for radialBars
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.OffsetY">
            <summary>
            Sets the top offset for radialBars
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.StartAngle">
            <summary>
            Angle from which the radialBars should start
            </summary>
        </member>
        <member name="P:ApexCharts.PlotOptionsRadialBar.Track">
            <inheritdoc cref="T:ApexCharts.Track" />
        </member>
        <member name="T:ApexCharts.RadialBarDataLabels">
            <summary>
            Defines how to style labels for the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabels.Name">
            <inheritdoc cref="T:ApexCharts.RadialBarDataLabelsName" />
        </member>
        <member name="P:ApexCharts.RadialBarDataLabels.Show">
            <summary>
            Whether to display labels inside radialBars or not
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabels.Total">
            <inheritdoc cref="T:ApexCharts.RadialBarDataLabelsTotal" />
        </member>
        <member name="P:ApexCharts.RadialBarDataLabels.Value">
            <inheritdoc cref="T:ApexCharts.RadialBarDataLabelsValue" />
        </member>
        <member name="T:ApexCharts.RadialBarDataLabelsName">
            <summary>
            Defines how to style the name for each section of the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.Color">
            <summary>
            Color of the name in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.FontFamily">
            <summary>
            Font family of the name in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.FontSize">
            <summary>
            Font size of the name in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.FontWeight">
            <summary>
            Font-weight of the name in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.OffsetY">
            <summary>
            Sets the top offset for name
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsName.Show">
            <summary>
            Show the name of the respective bar associated with it's value
            </summary>
        </member>
        <member name="T:ApexCharts.RadialBarDataLabelsTotal">
            <summary>
            Defines how to style the total for each section of the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.Color">
            <summary>
            Color of the total label
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.FontFamily">
            <summary>
            Font-family of the total label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.FontSize">
            <summary>
            Font-size of the total label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.FontWeight">
            <summary>
            Font-weight of the total label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.Label">
            <summary>
            Label for "total". Defaults to "Total"
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.Show">
            <summary>
            Show the total of all the series in the inner area of radialBar
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsTotal.Formatter">
            <summary>
            A custom formatter function to apply on the total value. It accepts one parameter w which contains the chart's config and global objects. Defaults to a total of all series percentage divided by the length of series.
            </summary>
        </member>
        <member name="T:ApexCharts.RadialBarDataLabelsValue">
            <summary>
            Defines how to style the value for each section of the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.Color">
            <summary>
            Color of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.FontFamily">
            <summary>
            Font family of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.FontSize">
            <summary>
            Font size of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.FontWeight">
            <summary>
            Font weight of the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.OffsetY">
            <summary>
            Sets the top offset for value label
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.Formatter">
            <summary>
            A custom formatter function to apply on the value label in dataLabel
            </summary>
        </member>
        <member name="P:ApexCharts.RadialBarDataLabelsValue.Show">
            <summary>
            Show the value label associated with the name label
            </summary>
        </member>
        <member name="T:ApexCharts.Hollow">
            <summary>
            Defines how to style the middle section of the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.Background">
            <summary>
            Background color for the hollow part of the radialBars
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.DropShadow">
            <inheritdoc cref="T:ApexCharts.DropShadow" />
        </member>
        <member name="P:ApexCharts.Hollow.Image">
            <summary>
            Optional image URL which can be displayed in the hollow area.
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.ImageClipped">
            <summary>
            If true, the image doesn't exceeds the hollow area and is contained within.
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.ImageHeight">
            <summary>
            Height of the hollow image
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.ImageOffsetX">
            <summary>
            Sets the left offset of hollow image
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.ImageOffsetY">
            <summary>
            Sets the top offset of hollow image
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.ImageWidth">
            <summary>
            Width of the hollow image
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.Margin">
            <summary>
            Spacing which will be subtracted from the available hollow size
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.Position">
            <summary>
            Determines where to place the grid for the chart
            </summary>
        </member>
        <member name="P:ApexCharts.Hollow.Size">
            <summary>
            Size in percentage relative to the total available size of chart
            </summary>
        </member>
        <member name="T:ApexCharts.Track">
            <summary>
            Defines how to style the empty portions of the radial bar chart
            </summary>
        </member>
        <member name="P:ApexCharts.Track.Background">
            <summary>
            Color of the track. If you want different color for each track, you can pass an array of colors.
            </summary>
        </member>
        <member name="P:ApexCharts.Track.DropShadow">
            <inheritdoc cref="T:ApexCharts.DropShadow" />
        </member>
        <member name="P:ApexCharts.Track.EndAngle">
            <summary>
            Angle to which the track should end.
            </summary>
        </member>
        <member name="P:ApexCharts.Track.Margin">
            <summary>
            Spacing between each track
            </summary>
        </member>
        <member name="P:ApexCharts.Track.Opacity">
            <summary>
            Opacity of the track
            </summary>
        </member>
        <member name="P:ApexCharts.Track.Show">
            <summary>
            Show track under the bar lines.
            </summary>
        </member>
        <member name="P:ApexCharts.Track.StartAngle">
            <summary>
            Angle from which the track should start.
            </summary>
        </member>
        <member name="P:ApexCharts.Track.Width">
            <summary>
            Width of the track
            </summary>
        </member>
        <member name="T:ApexCharts.Responsive">
            <summary>
            You can configure different options for different screen sizes and ApexCharts will override the configuration based on breakpoints defined.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/responsive">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/responsive">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Responsive.Breakpoint">
            <summary>
            The breakpoint is the max screen width at which the original config object will be overrided by the responsive config object
            </summary>
        </member>
        <member name="P:ApexCharts.Responsive.Options">
            <summary>
            The new configuration object that you would like to override on the existing default configuration object. All the options which you set normally can be set here. <see href="https://codepen.io/apexcharts/pen/ajpqJp">Example</see>
            </summary>
        </member>
        <member name="T:ApexCharts.States">
            <summary>
            Class to define styles that are applied on various interaction states with the chart.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/state">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/states">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.States.Active">
            <inheritdoc cref="T:ApexCharts.StatesActive" />
        </member>
        <member name="P:ApexCharts.States.Hover">
            <inheritdoc cref="T:ApexCharts.StatesHover" />
        </member>
        <member name="P:ApexCharts.States.Normal">
            <inheritdoc cref="T:ApexCharts.StatesNormal" />
        </member>
        <member name="T:ApexCharts.StatesActive">
            <summary>
            Defines styles to apply during the active state
            </summary>
        </member>
        <member name="P:ApexCharts.StatesActive.AllowMultipleDataPointsSelection">
            <summary>
            Whether to allow selection of multiple datapoints and give them active state or allow one dataPoint selection at a time.
            </summary>
        </member>
        <member name="P:ApexCharts.StatesActive.Filter">
            <inheritdoc cref="T:ApexCharts.StatesFilter" />
        </member>
        <member name="T:ApexCharts.StatesHover">
            <summary>
            Defines styles to apply during the hover state
            </summary>
        </member>
        <member name="P:ApexCharts.StatesHover.Filter">
            <inheritdoc cref="T:ApexCharts.StatesFilter" />
        </member>
        <member name="T:ApexCharts.StatesNormal">
            <summary>
            Defines styles to apply during the normal state
            </summary>
        </member>
        <member name="P:ApexCharts.StatesNormal.Filter">
            <inheritdoc cref="T:ApexCharts.StatesFilter" />
        </member>
        <member name="T:ApexCharts.StatesFilter">
            <summary>
            Defines the options to apply to the current state
            </summary>
        </member>
        <member name="P:ApexCharts.StatesFilter.Type">
            <summary>
            The filter function to apply on hover state.
            </summary>
        </member>
        <member name="P:ApexCharts.StatesFilter.Value">
            <summary>
            A larger value intensifies the filter effect. Accepts values between 0 and 1
            </summary>
        </member>
        <member name="T:ApexCharts.StatesFilterType">
            <summary>
            A list of shading options to apply to various data point states
            </summary>
        </member>
        <member name="T:ApexCharts.Stroke">
            <summary>
            Class to define how lines on charts should be generated.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/stroke">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Stroke.Colors">
            <summary>
            Colors to fill the border for paths.
            </summary>
        </member>
        <member name="P:ApexCharts.Stroke.Curve">
            <inheritdoc cref="P:ApexCharts.Stroke.JsonCurve"/>
            <remarks>
            For single-series charts
            </remarks>
        </member>
        <member name="P:ApexCharts.Stroke.Curves">
            <inheritdoc cref="P:ApexCharts.Stroke.JsonCurve"/>
            <remarks>
            For multi-series charts
            </remarks>
        </member>
        <member name="P:ApexCharts.Stroke.JsonCurve">
            <summary>
            In line / area charts, whether to draw smooth lines or straight lines. You can also pass an array in stroke.curve, where each index corresponds to the series-index in multi-series charts.
            </summary>
            <remarks>
            Set either <see cref="P:ApexCharts.Stroke.Curve"/> or <see cref="P:ApexCharts.Stroke.Curves"/>
            </remarks>
        </member>
        <member name="P:ApexCharts.Stroke.DashArray">
            <summary>
            Creates dashes in borders of svg path. Higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.Stroke.LineCap">
            <summary>
            For setting the starting and ending points of stroke
            </summary>
        </member>
        <member name="P:ApexCharts.Stroke.Show">
            <summary>
            To show or hide path-stroke / line
            </summary>
        </member>
        <member name="P:ApexCharts.Stroke.Width">
            <summary>
            Sets the width of border for svg path
            </summary>
        </member>
        <member name="T:ApexCharts.Subtitle">
            <summary>
            Class to define the visual appearance of the subtitle assigned to the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/subtitle">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Subtitle.Align">
            <summary>
            Alignment of subtitle relative to chart area.
            </summary>
        </member>
        <member name="P:ApexCharts.Subtitle.Floating">
            <summary>
            The floating option will take out the subtitle text from the chart area and make it float on top of the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Subtitle.Margin">
            <summary>
            Vertical spacing around the subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.Subtitle.OffsetX">
            <summary>
            Sets the left offset for subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.Subtitle.OffsetY">
            <summary>
            Sets the top offset for subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.Subtitle.Style">
            <inheritdoc cref="T:ApexCharts.SubtitleStyle" />
        </member>
        <member name="P:ApexCharts.Subtitle.Text">
            <summary>
            Text to display as a subtitle of chart
            </summary>
        </member>
        <member name="T:ApexCharts.SubtitleStyle">
            <summary>
            Defines the style options to apply to the subtitle
            </summary>
        </member>
        <member name="P:ApexCharts.SubtitleStyle.Color">
            <summary>
            Fore color of the subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.SubtitleStyle.FontFamily">
            <summary>
            Font Family of the subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.SubtitleStyle.FontSize">
            <summary>
            Font Size of the subtitle text
            </summary>
        </member>
        <member name="P:ApexCharts.SubtitleStyle.FontWeight">
            <summary>
            Font Weight of the subtitle text
            </summary>
        </member>
        <member name="T:ApexCharts.Theme">
            <summary>
            If you don't want to define your own colorPalette, choose a pre-defined palette in theme.palette property. ApexCharts has 10+ built in color palettes to choose from. To apply palette globally to all charts, set Apex.theme.palette property.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/chart-themes">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/themes">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/theme">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Theme.Mode">
            <summary>
            Changing the theme.mode will also update the text and background colors of the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Theme.Monochrome">
            <inheritdoc cref="T:ApexCharts.ThemeMonochrome" />
        </member>
        <member name="P:ApexCharts.Theme.Palette">
            <summary>
            Available palettes – palette1 to palette10
            </summary>
        </member>
        <member name="T:ApexCharts.ThemeMonochrome">
            <summary>
            Single color is used as a base and shades are generated from that color.
            </summary>
        </member>
        <member name="P:ApexCharts.ThemeMonochrome.Color">
            <summary>
            A hex color which will be used as the base color for generating shades
            </summary>
        </member>
        <member name="P:ApexCharts.ThemeMonochrome.Enabled">
            <summary>
            Whether to enable monochrome theme option.
            </summary>
        </member>
        <member name="P:ApexCharts.ThemeMonochrome.ShadeIntensity">
            <summary>
            What should be the intensity while generating shades. Accepts from 0 to 1
            </summary>
        </member>
        <member name="P:ApexCharts.ThemeMonochrome.ShadeTo">
            <summary>
            The type of shade to apply
            </summary>
        </member>
        <member name="T:ApexCharts.Title">
            <summary>
            Class to define the visual appearance of the title assigned to the chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/title">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Title.Align">
            <summary>
            Alignment of title relative to chart area.
            </summary>
        </member>
        <member name="P:ApexCharts.Title.Floating">
            <summary>
            The floating option will take out the title text from the chart area and make it float on top of the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Title.Margin">
            <summary>
            Vertical spacing around the title text
            </summary>
        </member>
        <member name="P:ApexCharts.Title.OffsetX">
            <summary>
            Sets the left offset for title text
            </summary>
        </member>
        <member name="P:ApexCharts.Title.OffsetY">
            <summary>
            Sets the top offset for title text
            </summary>
        </member>
        <member name="P:ApexCharts.Title.Style">
            <inheritdoc cref="T:ApexCharts.TitleStyle" />
        </member>
        <member name="P:ApexCharts.Title.Text">
            <summary>
            Text to display as a title of chart
            </summary>
        </member>
        <member name="T:ApexCharts.TitleStyle">
            <summary>
            Defines the style options to apply to the title
            </summary>
        </member>
        <member name="P:ApexCharts.TitleStyle.Color">
            <summary>
            Fore color of the title text
            </summary>
        </member>
        <member name="P:ApexCharts.TitleStyle.FontFamily">
            <summary>
            Font Family of the title text
            </summary>
        </member>
        <member name="P:ApexCharts.TitleStyle.FontSize">
            <summary>
            Font Size of the title text
            </summary>
        </member>
        <member name="P:ApexCharts.TitleStyle.FontWeight">
            <summary>
            Font Weight of the title text
            </summary>
        </member>
        <member name="T:ApexCharts.Tooltip">
            <summary>
            Tooltip allows you to preview data when user hovers over the chart area.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/tooltip">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/tooltip">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/tooltip">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Tooltip.Custom">
            <summary>
            Draw a custom html tooltip instead of the default one based on the values provided in the function arguments. <see href="https://apexcharts.com/docs/datetime">Custom Tooltip Example</see>
            
            <code>
            tooltip: {
                custom: function({series, seriesIndex, dataPointIndex, w}) {
                    return '&lt;div class="arrow_box"&gt;' +
                        '&lt;span&gt;' + series[seriesIndex][dataPointIndex] + '&lt;/span&gt;' +
                        '&lt;/div&gt;'
                }
            }
            </code>
            </summary>
            <remarks>
            Note: In a multi-seris/combo chart, you can pass an array of functions to customize tooltip for different chart types. For instance, a combo chart with a candlestick and a line will have different tooltips.
            </remarks>
        </member>
        <member name="P:ApexCharts.Tooltip.Enabled">
            <summary>
            Show tooltip when user hovers over chart area.
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.EnabledOnSeries">
            <summary>
            Show tooltip only on certain series in a multi-series chart. Provide indices of those series which you would like to be shown.
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.FillSeriesColor">
            <summary>
            When enabled, fill the tooltip background with the corresponding series color
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.Fixed">
            <inheritdoc cref="T:ApexCharts.TooltipFixed" />
        </member>
        <member name="P:ApexCharts.Tooltip.FollowCursor">
            <summary>
            Follow user's cursor position instead of putting tooltip on actual data points.
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.Intersect">
            <summary>
            Show tooltip only when user hovers exactly over datapoint.
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.InverseOrder">
            <summary>
            In multiple series, when having shared tooltip, inverse the order of series (for better comparison in stacked charts).
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.Items">
            <inheritdoc cref="T:ApexCharts.TooltipItems" />
        </member>
        <member name="P:ApexCharts.Tooltip.Marker">
            <inheritdoc cref="T:ApexCharts.TooltipMarker" />
        </member>
        <member name="P:ApexCharts.Tooltip.OnDatasetHover">
            <inheritdoc cref="T:ApexCharts.TooltipOnDatasetHover" />
        </member>
        <member name="P:ApexCharts.Tooltip.Shared">
            <summary>
            When having multiple series, show a shared tooltip. If you have a DateTime x-axis and multiple series chart ‐ make sure all your series has the same "x" values for a shared tooltip to work smoothly.
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.Style">
            <inheritdoc cref="T:ApexCharts.TooltipStyle" />
        </member>
        <member name="P:ApexCharts.Tooltip.Theme">
            <summary>
            The theme to apply to tooltips. If you further want to customize different background and forecolor of the tooltip, you should do it in CSS. Example:
            
            <code>
            .apexcharts-tooltip {
                background: #f3f3f3;
                color: orange;
            }
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.Tooltip.X">
            <inheritdoc cref="T:ApexCharts.TooltipX" />
        </member>
        <member name="P:ApexCharts.Tooltip.Y">
            <inheritdoc cref="T:ApexCharts.TooltipY" />
        </member>
        <member name="P:ApexCharts.Tooltip.Z">
            <inheritdoc cref="T:ApexCharts.TooltipZ" />
        </member>
        <member name="T:ApexCharts.TooltipFixed">
            <summary>
            Defines options to create a fixed-position tooltip
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipFixed.Enabled">
            <summary>
            Set the tooltip to a fixed position
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipFixed.OffsetX">
            <summary>
            Sets the left offset for the tooltip container in fixed position
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipFixed.OffsetY">
            <summary>
            Sets the top offset for the tooltip container in fixed position
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipFixed.Position">
            <summary>
            When having a fixed tooltip, select a predefined position.
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipItems">
            <summary>
            Defines style options to apply to tooltips
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipItems.Display">
            <summary>
            The css property of each tooltip item container.
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipMarker">
            <summary>
            Defines options to apply to tooltip markers
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipMarker.Show">
            <summary>
            Whether to show the color coded marker shape in front of Series Name which helps to identify series in multiple datasets.
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipOnDatasetHover">
            <summary>
            Defines options for hovering over the data set of the chart
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipOnDatasetHover.HighlightDataSeries">
            <summary>
            When user hovers over a datapoint of a particular series, other series will be grayed out making the current series highlight.
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipStyle">
            <summary>
            Defines style options to apply to tooltips
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipStyle.FontFamily">
            <summary>
            Font-family to apply on tooltip texts
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipStyle.FontSize">
            <summary>
            Font-size to apply on tooltip texts
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipX">
            <summary>
            Defines options to apply to the X-axis value of a tooltip
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipX.Format">
            <summary>
            The format of the x-axis value to show on the tooltip. To view how to format datetime Strings, view the <see href="https://apexcharts.com/docs/datetime">Datetime Formatter</see> guide.
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipX.Show">
            <summary>
            Whether to show the tooltip title (x-axis values) on tooltip or not
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipX.Formatter">
            <summary>
            A custom formatter function which you can override and display according to your needs (a use case can be a date formatted using complex moment.js functions)
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipYTitle">
            <summary>
            Defines options on how to format the title of a tooltip
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipYTitle.Formatter">
            <summary>
            The series name which appears besides values can be formatted using this function. Default behaviour is (seriesName) => returns seriesName
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipY">
            <summary>
            Defines options to apply to the Y-axis value of a tooltip
            </summary>
            <remarks>
            In a multiple series, the tooltip.y property can accept array to target formatters of different series scales.
            </remarks>
        </member>
        <member name="P:ApexCharts.TooltipY.Title">
            <inheritdoc cref="T:ApexCharts.TooltipYTitle" />
        </member>
        <member name="P:ApexCharts.TooltipY.Formatter">
            <summary>
            To format the Y-axis values of tooltip, you can define a custom formatter function. By default, these values will be formatted according yaxis.labels.formatter function which will be overrided by this function if you define it.
            
            <code>
            tooltip: {
                y: {
                    formatter: function(value, { series, seriesIndex, dataPointIndex, w }) {
                        return value
                    }
                }
            }
            </code>
            </summary>
        </member>
        <member name="T:ApexCharts.TooltipZ">
            <summary>
            Defines options to  apply to the Z-axis value of a tooltip
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipZ.Title">
            <summary>
            A custom text for the z values of Bubble Series.
            </summary>
        </member>
        <member name="P:ApexCharts.TooltipZ.Formatter">
            <summary>
            To format the z values of a Bubble series, you can use this function.
            </summary>
        </member>
        <member name="T:ApexCharts.XAxis">
            <summary>
            Class to customize the display of the X-axis on the generated chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/axis">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/xaxis">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.XAxis.AxisBorder">
            <inheritdoc cref="T:ApexCharts.AxisBorder" />
        </member>
        <member name="P:ApexCharts.XAxis.AxisTicks">
            <inheritdoc cref="T:ApexCharts.AxisTicks" />
        </member>
        <member name="P:ApexCharts.XAxis.Categories">
            <summary>
            Categories are labels which are displayed on the x-axis.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.OverwriteCategories">
            <summary>
            Allows you to overwrite all the labels of the x-axis with these labels. Accepts an array of string values.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Crosshairs">
            <inheritdoc cref="T:ApexCharts.AxisCrosshairs" />
        </member>
        <member name="P:ApexCharts.XAxis.Floating">
            <summary>
            Setting this options takes the y-axis out of the plotting area. Much behaves like position: absolute property of CSS
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.DecimalsInFloat">
            <summary>
            The number of fractions to display when there are floating values on the x-axis numbers. Note: Works only in numeric type.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Labels">
            <inheritdoc cref="T:ApexCharts.XAxisLabels" />
        </member>
        <member name="P:ApexCharts.XAxis.Max">
            <summary>
            The highest number to be set for the x-axis. The graph drawing beyond this number will be clipped off
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Min">
            <summary>
            The lowest number to be set for the x-axis. The graph drawing beyond this number will be clipped off
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.OffsetX">
            <summary>
            Sets the left offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.OffsetY">
            <summary>
            Sets the top offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Position">
            <summary>
            Setting this option allows you to change the x-axis position
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Range">
            <summary>
            Range takes the max value of x-axis, subtracts the provided range value and gets the min value based on that. So, technically it helps to keep the same range when min and max values gets updated dynamically
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.TickAmount">
            <summary>
            Number of Tick Intervals to show. Note: tickAmount doesn't have any effect when <see cref="P:ApexCharts.XAxis.Type"/> = <see cref="F:ApexCharts.XAxisType.Datetime"/>
            </summary>
            <remarks>
            If you have a numeric xaxis <see cref="P:ApexCharts.XAxis.Type"/> = <see cref="F:ApexCharts.XAxisType.Numeric"/>, you can specify tickAmount: 'dataPoints' which would make the number of ticks equal to the number of dataPoints in the chart.
            </remarks>
        </member>
        <member name="P:ApexCharts.XAxis.TickPlacement">
            <summary>
            Whether to draw the ticks in between the data-points or on the data-points.
            </summary>
            <remarks>
            Note: tickPlacement only works for <see cref="P:ApexCharts.XAxis.Type"/>: <see cref="F:ApexCharts.XAxisType.Category"/> charts and not for <see cref="F:ApexCharts.XAxisType.Datetime"/> charts.
            </remarks>
        </member>
        <member name="P:ApexCharts.XAxis.Title">
            <inheritdoc cref="T:ApexCharts.AxisTitle" />
        </member>
        <member name="P:ApexCharts.XAxis.Tooltip">
            <inheritdoc cref="T:ApexCharts.AxisTooltip" />
        </member>
        <member name="P:ApexCharts.XAxis.Type">
            <summary>
            Specifies the data type to use for the x-axis
            </summary>
        </member>
        <member name="P:ApexCharts.XAxis.Group">
            <inheritdoc cref="T:ApexCharts.XAxisGroups" />
        </member>
        <member name="T:ApexCharts.XAxisGroups">
            <summary>
            Defines options to apply to groups within the X-axis
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroups.Groups">
            <inheritdoc cref="T:ApexCharts.XAxisGroup" />
        </member>
        <member name="P:ApexCharts.XAxisGroups.Style">
            <inheritdoc cref="T:ApexCharts.XAxisGroupStyle" />
        </member>
        <member name="T:ApexCharts.XAxisGroup">
            <summary>
            Defines an individual group within the X-axis
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroup.Title">
            <summary>
            The name to apply to the group
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroup.Cols">
            <summary>
            The number of columns in the group
            </summary>
        </member>
        <member name="T:ApexCharts.XAxisGroupStyle">
            <summary>
            Defines styling to apply to X-axis groups
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroupStyle.Colors">
            <summary>
            Fore color for the x-axis groups label.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroupStyle.FontSize">
            <summary>
            Font size for the x-axis group label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroupStyle.FontFamily">
            <summary>
            Font family for the x-axis group label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroupStyle.FontWeight">
            <summary>
            Font-weight for the x-axis group label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisGroupStyle.CssClass">
            <summary>
            A custom Css Class to give to the label elements
            </summary>
        </member>
        <member name="T:ApexCharts.TickPlacement">
            <summary>
            A list of placement options for ticks
            </summary>
        </member>
        <member name="T:ApexCharts.AxisBorder">
            <summary>
            Defines styling to apply to the border of an axis
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.Color">
            <summary>
            Color of the axis border
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.OffsetX">
            <summary>
            Sets the left offset of the axis border
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.OffsetY">
            <summary>
            Sets the top offset of the axis border
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.Show">
            <summary>
            Draw a border on the axis
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.Height">
            <summary>
            Sets the border height of the axis line
            </summary>
        </member>
        <member name="P:ApexCharts.AxisBorder.Width">
            <summary>
            Sets the width of the axis line
            </summary>
        </member>
        <member name="T:ApexCharts.AxisTicks">
            <summary>
            Defines styling to apply to the ticks of an axis
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.BorderType">
            <summary>
            The type of border to apply
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.Color">
            <summary>
            Color of the ticks
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.Height">
            <summary>
            Height of the ticks
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.OffsetX">
            <summary>
            Sets the left offset of the ticks
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.OffsetY">
            <summary>
            Sets the top offset of the ticks
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTicks.Show">
            <summary>
            Draw ticks on the axis to specify intervals
            </summary>
        </member>
        <member name="T:ApexCharts.AxisCrosshairs">
            <summary>
            Defines styling options to apply to chart crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.DropShadow">
            <inheritdoc cref="T:ApexCharts.CrosshairsDropShadow" />
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Fill">
            <inheritdoc cref="T:ApexCharts.CrosshairsFill" />
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Opacity">
            <summary>
            Opacity of the crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Position">
            <summary>
            Where to place the crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Show">
            <summary>
            Show crosshairs on axis when user moves the mouse over chart area
            </summary>
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Stroke">
            <inheritdoc cref="T:ApexCharts.CrosshairStroke" />
        </member>
        <member name="P:ApexCharts.AxisCrosshairs.Width">
            <summary>
            Defines the width to apply to the crosshairs
            </summary>
            <remarks>
            Options:
            
            <list type="bullet">
            <item>Any number</item>
            <item>
                <term>tickWidth</term>
                <description>takes the tick intervals on axis and creates a crosshair of that width</description>
            </item>
            <item>
                <term>barWidth</term>
                <description>takes the barWidth and creates a crosshair of that width – only applicable to vertical bar charts</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="T:ApexCharts.CrosshairsDropShadow">
            <summary>
            Defines how to style a shadow to display with the crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsDropShadow.Blur">
            <summary>
            Set blur distance for shadow
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsDropShadow.Enabled">
            <summary>
            Enable a dropshadow for crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsDropShadow.Left">
            <summary>
            Set left offset for shadow
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsDropShadow.Opacity">
            <summary>
            Set the opacity of shadow.
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsDropShadow.Top">
            <summary>
            Set top offset for shadow
            </summary>
        </member>
        <member name="T:ApexCharts.CrosshairsFill">
            <summary>
            Defines a styling to fill the crosshairs with
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsFill.Color">
            <summary>
            Fill color of crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairsFill.Gradient">
            <inheritdoc cref="T:ApexCharts.FluffyGradient" />
        </member>
        <member name="P:ApexCharts.CrosshairsFill.Type">
            <summary>
            The type of fill to use in the crosshairs
            </summary>
        </member>
        <member name="T:ApexCharts.FluffyGradient">
            <summary>
            Defines a styling for a gradient to fill the crosshairs with
            </summary>
        </member>
        <member name="P:ApexCharts.FluffyGradient.ColorFrom">
            <summary>
            Crosshairs Gradient Color from
            </summary>
        </member>
        <member name="P:ApexCharts.FluffyGradient.ColorTo">
            <summary>
            Crosshairs Gradient Color to
            </summary>
        </member>
        <member name="P:ApexCharts.FluffyGradient.OpacityFrom">
            <summary>
            Crosshairs fill opacity from
            </summary>
        </member>
        <member name="P:ApexCharts.FluffyGradient.OpacityTo">
            <summary>
            Crosshairs fill opacity to
            </summary>
        </member>
        <member name="P:ApexCharts.FluffyGradient.Stops">
            <summary>
            Stops defines the ramp of colors to use on a gradient
            </summary>
        </member>
        <member name="T:ApexCharts.CrosshairStroke">
            <summary>
            Defines how to style the border of the crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairStroke.Color">
            <summary>
            Border Color of crosshairs
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairStroke.DashArray">
            <summary>
            Creates dashes in borders of crosshairs. A higher number creates more space between dashes in the border.
            </summary>
        </member>
        <member name="P:ApexCharts.CrosshairStroke.Width">
            <summary>
            Border Width of crosshairs
            </summary>
        </member>
        <member name="T:ApexCharts.XAxisLabels">
            <summary>
            Defines how to style labels on the X-axis
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.DatetimeFormatter">
            <inheritdoc cref="T:ApexCharts.DatetimeFormatter" />
        </member>
        <member name="P:ApexCharts.XAxisLabels.DatetimeUTC">
            <summary>
            When turned on, local DateTime is converted into UTC. Turn it off if you supply date with timezone info and want to preserve it.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.Format">
            <summary>
            Formats the datetime value based on the format specifier.
            </summary>
            <remarks>
            See the list of available <see href="https://apexcharts.com/docs/datetime">format specifiers</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.XAxisLabels.Formatter">
            <summary>
            Overrides everything and applies a custom function for the xaxis value. The function accepts 3 arguments. The first one is the default formatted value and the second one as the raw timestamp which you can pass to any datetime handling function to suit your needs. The 3rd argument is present in date-time xaxis which includes a dateFormatter as described in the code below.
            
            <code>
            xaxis: {
                labels: {
                    formatter: function(value, timestamp, opts) {
                        return opts.dateFormatter(new Date(timestamp)).format("dd MMM")
                    }
                }
            }
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.HideOverlappingLabels">
            <summary>
            When labels are too close and start to overlap on one another, this option prevents overlapping of the labels.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.MaxHeight">
            <summary>
            Maximum height for the labels when they are rotated.
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.MinHeight">
            <summary>
            Minimum height for the labels
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.OffsetX">
            <summary>
            Sets the left offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.OffsetY">
            <summary>
            Sets the top offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.Rotate">
            <summary>
            Rotate angle for the x-axis labels
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.RotateAlways">
            <summary>
            Whether to rotate the labels always or to rotate only when the texts don't fit the available width
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.Show">
            <summary>
            Show labels on x-axis
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.ShowDuplicates">
            <summary>
            By default, duplicate labels are not printed to prevent congested values in a datetime series. If you intentionally want to display the same values in x-axis labels, turn on this option
            </summary>
        </member>
        <member name="P:ApexCharts.XAxisLabels.Style">
            <inheritdoc cref="T:ApexCharts.AxisLabelStyle" />
        </member>
        <member name="P:ApexCharts.XAxisLabels.Trim">
            <summary>
            Append ... to the text when it can't fit the available space and rotate is turned off
            </summary>
        </member>
        <member name="T:ApexCharts.YAxisLabels">
            <summary>
            Defines how to style labels on the Y-axis
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.DatetimeFormatter">
            <inheritdoc cref="T:ApexCharts.DatetimeFormatter" />
        </member>
        <member name="P:ApexCharts.YAxisLabels.Formatter">
            <summary>
            Applies a custom function for the yaxis value.
            
            <code>
            yaxis: {
                labels: {
                    formatter: function(val, index) {
                        return val.toFixed(2);
                    }
                }
            }
            </code>
            </summary>
            <remarks>
            Note: In horizantal bar charts, the second parameters also contains additional data like dataPointIndex &amp; seriesIndex.
            </remarks>
        </member>
        <member name="P:ApexCharts.YAxisLabels.MaxWidth">
            <summary>
            Maximum width for the y-axis labels
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.MinWidth">
            <summary>
            Minimum width for the y-axis labels
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.OffsetX">
            <summary>
            Sets the left offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.OffsetY">
            <summary>
            Sets the top offset for label
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.Rotate">
            <summary>
            Rotate y-axis text label to a specific angle from it's center
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.Show">
            <summary>
            Show labels on y-axis
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisLabels.Style">
            <inheritdoc cref="T:ApexCharts.AxisLabelStyle" />
        </member>
        <member name="P:ApexCharts.YAxisLabels.Align">
            <summary>
            Alignment of Y-axis label relative to chart area.
            </summary>
        </member>
        <member name="T:ApexCharts.DatetimeFormatter">
            <summary>
            For the default timescale that is generated automatically based on the datetime difference, the below specifiers are used by default.
            </summary>
        </member>
        <member name="P:ApexCharts.DatetimeFormatter.Day">
            <summary>
            Format specifier for the day of month.
            </summary>
        </member>
        <member name="P:ApexCharts.DatetimeFormatter.Hour">
            <summary>
            Format specifier for the hour of day.
            </summary>
        </member>
        <member name="P:ApexCharts.DatetimeFormatter.Month">
            <summary>
            Format specifier for the month.
            </summary>
        </member>
        <member name="P:ApexCharts.DatetimeFormatter.Year">
            <summary>
            Format specifier for the year.
            </summary>
        </member>
        <member name="T:ApexCharts.AxisLabelStyle">
            <summary>
            Defines styling to apply to the axis labels
            </summary>
        </member>
        <member name="P:ApexCharts.AxisLabelStyle.Colors">
            <summary>
            Fore color for the axis label. Accepts an array for <see href="https://apexcharts.com/javascript-chart-demos/column-charts/distributed">distributed</see> charts or accepts a single color string.
            </summary>
        </member>
        <member name="P:ApexCharts.AxisLabelStyle.CssClass">
            <summary>
            A custom Css Class to give to the label elements
            </summary>
        </member>
        <member name="P:ApexCharts.AxisLabelStyle.FontFamily">
            <summary>
            Font family for the axis label
            </summary>
        </member>
        <member name="P:ApexCharts.AxisLabelStyle.FontSize">
            <summary>
            Font size for the axis label
            </summary>
        </member>
        <member name="P:ApexCharts.AxisLabelStyle.FontWeight">
            <summary>
            Font-weight for the axis label
            </summary>
        </member>
        <member name="T:ApexCharts.XAxisTooltip">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.AxisTooltip">
            <summary>
            Defines options to apply to X-axis tooltips
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltip.Enabled">
            <summary>
            Show tooltip on axis or not
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltip.OffsetY">
            <summary>
            Sets the top offset for axis tooltip
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltip.Formatter">
            <summary>
            A custom formatter function for the x-axis tooltip label. If undefined, the xaxis tooltip uses the default "X" value used in general tooltip. Example:
            
            <code>
            xaxis: {
                tooltip: {
                    formatter: function(val, opts) {
                        return val + "..."
                    }
                }
            }
            </code>
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltip.Style">
            <inheritdoc cref="T:ApexCharts.AxisTooltipStyle" />
        </member>
        <member name="T:ApexCharts.YAxisTooltip">
            <summary>
            Defines options to apply to Y-axis tooltips
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisTooltip.Enabled">
            <summary>
            Show tooltip on y-axis
            </summary>
        </member>
        <member name="P:ApexCharts.YAxisTooltip.OffsetX">
            <summary>
            Sets the top offset for y-axis tooltip
            </summary>
        </member>
        <member name="T:ApexCharts.AxisTooltipStyle">
            <summary>
            Defines styling to apply to axis tooltips
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltipStyle.FontFamily">
            <summary>
            Font family for the axis tooltip text
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTooltipStyle.FontSize">
            <summary>
            Font size for the axis tooltip text
            </summary>
        </member>
        <member name="T:ApexCharts.YAxis">
            <summary>
            Class to customize the display of the Y-axis on the generated chart
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/features/axis">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/options/yaxis">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.YAxis.AxisBorder">
            <inheritdoc cref="T:ApexCharts.AxisBorder" />
        </member>
        <member name="P:ApexCharts.YAxis.AxisTicks">
            <inheritdoc cref="T:ApexCharts.AxisTicks" />
        </member>
        <member name="P:ApexCharts.YAxis.Crosshairs">
            <inheritdoc cref="T:ApexCharts.AxisCrosshairs" />
        </member>
        <member name="P:ApexCharts.YAxis.DecimalsInFloat">
            <summary>
            The number of fractions to display when there are floating values in y-axis. Note: If you have defined a custom formatter function in yaxis.labels.formatter, this won't have any effect.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Floating">
            <summary>
            etting this options takes the y-axis out of the plotting area. Much behaves like position: absolute property of CSS
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.ForceNiceScale">
            <summary>
            If set to true, the y-axis scales are forced to generate nice looking rounded numbers even when min/max are provided. Turn this off if you manually set min/max and want it to be unchanged.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Labels">
            <inheritdoc cref="T:ApexCharts.YAxisLabels" />
        </member>
        <member name="P:ApexCharts.YAxis.Logarithmic">
            <summary>
            A non-linear scale when there is a large range of values.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.LogBase">
            <summary>
            Controls the logarithmic base. Default is 10
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Max">
            <summary>
            The highest number to be set for the y-axis. The graph drawing beyond this number will be clipped off.
            </summary>
            <remarks>
            You can also pass a function here which should return a number.The function accepts an argument which by default is the biggest value in the y-axis.function(max) { return max }
            </remarks>
        </member>
        <member name="P:ApexCharts.YAxis.Min">
            <summary>
            The lowest number to be set for the y-axis. The graph drawing beyond this number will be clipped off.
            </summary>
            <remarks>
            You can also pass a function here which should return a number.The function accepts an argument which by default is the smallest value in the y-axis.function(min) { return min }
            </remarks>
        </member>
        <member name="P:ApexCharts.YAxis.Opposite">
            <summary>
            When enabled, will draw the yaxis on the right side of the chart
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Reversed">
            <summary>
            Flip the chart upside down making it inversed and draw the y-axis from bigger to smaller numbers.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.SeriesName">
            <summary>
            In a multiple y-axis chart, you can target the scale of a y-axis to a particular series by referencing through the seriesName. The series item which have the same name property will be used to calculate the scale of the y-axis.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Show">
            <summary>
            Whether to display the y-axis or not.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.ShowAlways">
            <summary>
            Whether to hide y-axis when user toggles series through legend.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.ShowForNullSeries">
            <summary>
            When turned off, it will hide the y-axis completely for a series which has no data or a series with all null values.
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.TickAmount">
            <summary>
            Number of Tick Intervals to show
            </summary>
        </member>
        <member name="P:ApexCharts.YAxis.Title">
            <inheritdoc cref="T:ApexCharts.AxisTitle" />
        </member>
        <member name="P:ApexCharts.YAxis.Tooltip">
            <inheritdoc cref="T:ApexCharts.YAxisTooltip" />
        </member>
        <member name="T:ApexCharts.AxisTitle">
            <summary>
            Defines options to apply to the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitle.OffsetX">
            <summary>
            Sets the left offset for axis title.
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitle.OffsetY">
            <summary>
            Sets the top offset for the axis title.
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitle.Rotate">
            <summary>
            Rotate the axis title either 90 or -90.
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitle.Style">
            <inheritdoc cref="T:ApexCharts.AxisTitleStyle" />
        </member>
        <member name="P:ApexCharts.AxisTitle.Text">
            <summary>
            Give the axis a title which will be displayed below the axis labels by default.
            </summary>
        </member>
        <member name="T:ApexCharts.AxisTitleStyle">
            <summary>
            Defines styling to apply to the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitleStyle.Color">
            <summary>
            Fore color of the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitleStyle.CssClass">
            <summary>
            A custom CSS Class to give to the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitleStyle.FontFamily">
            <summary>
            Font family for the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitleStyle.FontSize">
            <summary>
            Font size for the axis title
            </summary>
        </member>
        <member name="P:ApexCharts.AxisTitleStyle.FontWeight">
            <summary>
            Font-weight for the axis title
            </summary>
        </member>
        <member name="T:ApexCharts.Easing">
            <summary>
            A list of easing options for animations
            </summary>
        </member>
        <member name="T:ApexCharts.StackType">
            <summary>
            A list of stacking options for stacked charts
            </summary>
        </member>
        <member name="T:ApexCharts.AutoSelected">
            <summary>
            A list of toolbar items to select when the chart is loaded
            </summary>
        </member>
        <member name="T:ApexCharts.ChartType">
            <summary>
            A list of chart types available to create
            </summary>
        </member>
        <member name="T:ApexCharts.ZoomType">
            <summary>
            A list of options to enable zooming on charts
            </summary>
        </member>
        <member name="T:ApexCharts.TextAnchor">
            <summary>
            A list of options to align data labels
            </summary>
        </member>
        <member name="T:ApexCharts.GridPosition">
            <summary>
            A list of options to position generated gridss
            </summary>
        </member>
        <member name="T:ApexCharts.Align">
            <summary>
            A list of alignment options
            </summary>
        </member>
        <member name="T:ApexCharts.LegendPosition">
            <summary>
            A list of areas to place the legend for charts
            </summary>
        </member>
        <member name="T:ApexCharts.ShapeEnum">
            <summary>
            A list of shapes to generate data point markers with
            </summary>
        </member>
        <member name="T:ApexCharts.VerticalAlign">
            <summary>
            A list of alignment options for vertical placement
            </summary>
        </member>
        <member name="T:ApexCharts.Orientation">
            <summary>
            A list of orientations for rotation
            </summary>
        </member>
        <member name="T:ApexCharts.Curve">
            <summary>
            A list of ways to generate lines
            </summary>
        </member>
        <member name="F:ApexCharts.Curve.Smooth">
            <summary>
            Connects the points in a curve fashion. Also known as spline
            </summary>
        </member>
        <member name="F:ApexCharts.Curve.Stepline">
            <summary>
            Points are connected by horizontal and vertical line segments, looking like steps of a staircase.
            </summary>
        </member>
        <member name="F:ApexCharts.Curve.Straight">
            <summary>
            Connect the points in straight lines.
            </summary>
        </member>
        <member name="T:ApexCharts.LineCap">
            <summary>
            A list of shapes to use for starting and ending points
            </summary>
        </member>
        <member name="F:ApexCharts.LineCap.Butt">
            <summary>
            Ends the stroke with a 90-degree angle
            </summary>
        </member>
        <member name="F:ApexCharts.LineCap.Round">
            <summary>
            Ends the path-stroke with a radius that smooths out the start and end points
            </summary>
        </member>
        <member name="F:ApexCharts.LineCap.Square">
            <summary>
            Similar to butt except that it extends the stroke beyond the length of the path
            </summary>
        </member>
        <member name="T:ApexCharts.Mode">
            <summary>
            A list of theme options to use
            </summary>
        </member>
        <member name="T:ApexCharts.XAxisType">
            <summary>
            A list of data types available for X-axis values
            </summary>
        </member>
        <member name="T:ApexCharts.Models.CustomJsonStringEnumConverter">
            <summary>
            Facilitates serialization of enum values
            </summary>
            <remarks>
            <see href="https://stackoverflow.com/questions/59059989/system-text-json-how-do-i-specify-a-custom-name-for-an-enum-value">Stackoverflow Discussion</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.Models.CustomJsonStringEnumConverter.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.Models.CustomJsonStringEnumConverter.CreateConverter(System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.Models.JsonNamingPolicyDecorator.ConvertName(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.Models.DictionaryLookupNamingPolicy.ConvertName(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.Models.DataPointConverter`1">
            <summary>
            Facilitates serialization of <see cref="T:ApexCharts.IDataPoint`1"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApexCharts.Models.DataPointConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApexCharts.Models.DataPointConverter`1.Write(System.Text.Json.Utf8JsonWriter,ApexCharts.IDataPoint{`0},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.Models.SeriesConverter`1">
            <summary>
            Facilitates serialization of <see cref="T:ApexCharts.Series`1"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApexCharts.Models.SeriesConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApexCharts.Models.SeriesConverter`1.Write(System.Text.Json.Utf8JsonWriter,System.Collections.Generic.List{ApexCharts.Series{`0}},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.Models.ValueOrListConverter`1">
            <summary>
            Facilitates serialization of <see cref="T:ApexCharts.ValueOrList`1"/>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:ApexCharts.Models.ValueOrListConverter`1.Read(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:ApexCharts.Models.ValueOrListConverter`1.CanConvert(System.Type)">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.Models.ValueOrListConverter`1.Write(System.Text.Json.Utf8JsonWriter,ApexCharts.ValueOrList{`0},System.Text.Json.JsonSerializerOptions)">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.BubblePoint`1">
            <summary>
            Used to create data points for <see cref="F:ApexCharts.ChartType.Bubble"/>
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.FillColor">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.FillColor"/>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.X">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.X"/>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.Y">
            <summary>
            The Y-value for the data point to create on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.Z">
            <summary>
            The Z-value for the data point to create on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.Extra">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Extra"/>
        </member>
        <member name="P:ApexCharts.BubblePoint`1.Items">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Items"/>
        </member>
        <member name="T:ApexCharts.DataPoint`1">
            <summary>
            Used to create data points for chart types with a singular Y-value
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.DataPoint`1.FillColor">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.FillColor"/>
        </member>
        <member name="P:ApexCharts.DataPoint`1.X">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.X"/>
        </member>
        <member name="P:ApexCharts.DataPoint`1.Goals">
            <summary>
            A collection of goal markers to display with the data point
            </summary>
        </member>
        <member name="P:ApexCharts.DataPoint`1.Y">
            <summary>
            The Y-value for the data point to create on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.DataPoint`1.Items">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Items"/>
        </member>
        <member name="P:ApexCharts.DataPoint`1.Extra">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Extra"/>
        </member>
        <member name="P:ApexCharts.DataPoint`1.GroupedPoints">
            <summary>
            Used to store the individual data points that were grouped to create the current data point
            </summary>
            <remarks>
            Will be available when <see cref="P:ApexCharts.ApexChart`1.GroupPoints"/> is used
            </remarks>
        </member>
        <member name="T:ApexCharts.DataPointGoal">
            <summary>
            Defines styling details to apply to individual data point targets
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.Name">
            <summary>
            The name to assign to the goal
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.Value">
            <summary>
            The Y-value to assign to the goal
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.StrokeWidth">
            <summary>
            Sets the width of the goal marker
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.StrokeHeight">
            <summary>
            Sets the height of the goal marker
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.StrokeDashArray">
            <summary>
            Sets the spacing between ticks on a dashed goal marker
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.StrokeColor">
            <summary>
            Sets the color of the goal marker
            </summary>
        </member>
        <member name="P:ApexCharts.DataPointGoal.StrokeLineCap">
            <summary>
            The shape to use for the goal marker
            </summary>
        </member>
        <member name="T:ApexCharts.StrokeLineCap">
            <summary>
            A listing of shapes for goal markers
            </summary>
        </member>
        <member name="T:ApexCharts.IDataPoint`1">
            <summary>
            Interface to define shared requirements for all data point types
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.IDataPoint`1.Items">
            <summary>
            Collection that contains the Y-values to create the data point on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.IDataPoint`1.X">
            <summary>
            The X-value for the data point to create on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.IDataPoint`1.FillColor">
            <summary>
            The color to assign to the data point
            </summary>
        </member>
        <member name="P:ApexCharts.IDataPoint`1.Extra">
            <summary>
            Additional information to serialize with the data point
            </summary>
        </member>
        <member name="T:ApexCharts.JSDataPointSelection">
            <summary>
            Return data from JavaScript when a data point event occurs
            </summary>
        </member>
        <member name="P:ApexCharts.JSDataPointSelection.SelectedDataPoints">
            <summary>
            List of selected DataPoints
            </summary>
        </member>
        <member name="P:ApexCharts.JSDataPointSelection.DataPointIndex">
            <summary>
            The index of the data point being selected
            </summary>
        </member>
        <member name="P:ApexCharts.JSDataPointSelection.SeriesIndex">
            <summary>
            The index of the data series being selected
            </summary>
        </member>
        <member name="T:ApexCharts.JSXAxisLabelClick">
            <summary>
            Return data from JavaScript when an X-axis label is clicked
            </summary>
        </member>
        <member name="P:ApexCharts.JSXAxisLabelClick.LabelIndex">
            <summary>
            The index of the X-axis label that was clicked
            </summary>
        </member>
        <member name="P:ApexCharts.JSXAxisLabelClick.Caption">
            <summary>
            The display text of the X-axis label that was clicked
            </summary>
        </member>
        <member name="T:ApexCharts.SelectedData`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnMarkerClick"/> or <see cref="P:ApexCharts.ApexChart`1.OnDataPointSelection"/> are invoked
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.SelectedData`1.Chart">
            <summary>
            A reference to the chart where a selection has occurred
            </summary>
        </member>
        <member name="P:ApexCharts.SelectedData`1.Series">
            <summary>
            The series containing the data point that has been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectedData`1.DataPoint">
            <summary>
            The data point that has been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectedData`1.IsSelected">
            <summary>
            Specifies whether the data point is currently selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectedData`1.DataPointIndex">
            <summary>
            The index of the data point being selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectedData`1.SeriesIndex">
            <summary>
            The index of the data series being selected
            </summary>
        </member>
        <member name="T:ApexCharts.HoverData`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnDataPointEnter"/> or <see cref="P:ApexCharts.ApexChart`1.OnDataPointLeave"/> are invoked. Additionally used for the context object within <see cref="P:ApexCharts.ApexChart`1.ApexPointTooltip"/>.
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.HoverData`1.Chart">
            <summary>
            A reference to the chart where a hover action has occurred
            </summary>
        </member>
        <member name="P:ApexCharts.HoverData`1.Series">
            <summary>
            The series containing the data point that has been hovered
            </summary>
        </member>
        <member name="P:ApexCharts.HoverData`1.DataPoint">
            <summary>
            The data point that has been hovered
            </summary>
        </member>
        <member name="P:ApexCharts.HoverData`1.DataPointIndex">
            <summary>
            The index of the data point being hovered
            </summary>
        </member>
        <member name="P:ApexCharts.HoverData`1.SeriesIndex">
            <summary>
            The index of the data series being hovered
            </summary>
        </member>
        <member name="T:ApexCharts.ZoomedData`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnZoomed"/> is invoked
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.ZoomedData`1.Chart">
            <summary>
            A reference to the chart where a zoom action has been performed
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedData`1.XAxis">
            <inheritdoc cref="T:ApexCharts.SelectionXAxis"/>
        </member>
        <member name="P:ApexCharts.ZoomedData`1.YAxis">
            <summary>
            Y Axis objects
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomedData`1.IsZoomed">
            <summary>
            Specifies whether there is zoom applied to the chart
            </summary>
        </member>
        <member name="T:ApexCharts.SelectionData`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnSelection"/> or <see cref="P:ApexCharts.ApexChart`1.OnBrushScrolled"/> are invoked
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.SelectionData`1.Chart">
            <summary>
            A reference to the chart where data has been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionData`1.XAxis">
            <inheritdoc cref="T:ApexCharts.SelectionXAxis"/>
        </member>
        <member name="P:ApexCharts.SelectionData`1.YAxis">
            <inheritdoc cref="T:ApexCharts.SelectionYAxis"/>
        </member>
        <member name="T:ApexCharts.SelectionXAxis">
            <summary>
            Contains details related to the X-axis values that have been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionXAxis.Min">
            <summary>
            The minimum X-axis value for data that has been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionXAxis.Max">
            <summary>
            The maximum X-axis value for data that has been selected
            </summary>
        </member>
        <member name="T:ApexCharts.SelectionYAxis">
            <summary>
            Contains details related to the Y-axis values that have been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionYAxis.Min">
            <summary>
            The minimum Y-axis value for data that has been selected
            </summary>
        </member>
        <member name="P:ApexCharts.SelectionYAxis.Max">
            <summary>
            The maximum Y-axis value for data that has been selected
            </summary>
        </member>
        <member name="T:ApexCharts.ListPoint`1">
            <summary>
            Used to create data points for chart types with multiple Y-values
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.ListPoint`1.FillColor">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.FillColor"/>
        </member>
        <member name="P:ApexCharts.ListPoint`1.X">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.X"/>
        </member>
        <member name="P:ApexCharts.ListPoint`1.Y">
            <summary>
            The Y-values for the data point to create on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ListPoint`1.Extra">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Extra"/>
        </member>
        <member name="P:ApexCharts.ListPoint`1.Items">
            <inheritdoc cref="P:ApexCharts.IDataPoint`1.Items"/>
        </member>
        <member name="T:ApexCharts.DataUriOptions">
            <summary>
            Class to provide options for <see cref="M:ApexCharts.ApexChart`1.GetDataUriAsync(ApexCharts.DataUriOptions)"/>
            </summary>
        </member>
        <member name="P:ApexCharts.DataUriOptions.Width">
            <summary>
            The width to assign to the resulting PDF
            </summary>
        </member>
        <member name="P:ApexCharts.DataUriOptions.Scale">
            <summary>
            The amount to scale the resulting PDF
            </summary>
        </member>
        <member name="T:ApexCharts.DataUriResult">
            <summary>
            Class to receive the result from <see cref="M:ApexCharts.ApexChart`1.GetDataUriAsync(ApexCharts.DataUriOptions)"/>
            </summary>
        </member>
        <member name="P:ApexCharts.DataUriResult.ImgURI">
            <summary>
            The base64 data to generate a PDF with
            </summary>
        </member>
        <member name="T:ApexCharts.GaugeValue">
            <summary>
            Class to define properties required for creating a gauge chart
            </summary>
        </member>
        <member name="P:ApexCharts.GaugeValue.Label">
            <summary>
            The text name for the data series in the chart
            </summary>
        </member>
        <member name="P:ApexCharts.GaugeValue.Percentage">
            <summary>
            The value to assign to the radial bar chart
            </summary>
        </member>
        <member name="T:ApexCharts.GroupPoints">
            <summary>
            Class to define properties on how to group data points on a chart
            </summary>
        </member>
        <member name="P:ApexCharts.GroupPoints.MaxCount">
            <summary>
            Indicates the max number of points to show, excluding the grouped values.
            </summary>
        </member>
        <member name="P:ApexCharts.GroupPoints.MinCount">
            <summary>
            Indicates the min number of points to show, excluding the grouped values.
            </summary>
        </member>
        <member name="P:ApexCharts.GroupPoints.PercentageThreshold">
            <summary>
            The percentage value that indicate if a value should be grouped.
            </summary>
        </member>
        <member name="P:ApexCharts.GroupPoints.Name">
            <summary>
            The X-axis label to assign to the group
            </summary>
        </member>
        <member name="T:ApexCharts.PaletteType">
            <summary>
            A listing of pre-defined color themes to use with charts
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/chart-themes">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/themes">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/theme/#palette">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="T:ApexCharts.Series`1">
            <summary> 
            The series is a set of data. You may have single or multiple data series. The series object can be of the following format: Single values, Paired values, Timeline Series, or Data for Pie/Donuts/RadialBars
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/series">JavaScript Documentation</see>,
            <see href="https://apexcharts.com/docs/options/series">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.Series`1.Data">
            <summary>
            The group of individual data points to display on the chart.
            </summary>
        </member>
        <member name="P:ApexCharts.Series`1.Name">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Name"/>
        </member>
        <member name="P:ApexCharts.Series`1.Group">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Group"/>
        </member>
        <member name="P:ApexCharts.Series`1.Type">
            <summary>
            The internal type of this series
            </summary>
        </member>
        <member name="P:ApexCharts.Series`1.ApexSeries">
            <summary>
            Reference to the Apex data series for this object
            </summary>
        </member>
        <member name="T:ApexCharts.SeriesStroke">
            <summary>
            Class to define the <see cref="P:ApexCharts.ApexChartOptions`1.Stroke"/> values for a single series
            </summary>
        </member>
        <member name="P:ApexCharts.SeriesStroke.Color">
            <summary>
            The color value to add to <see cref="P:ApexCharts.Stroke.Colors"/> for the series
            </summary>
        </member>
        <member name="P:ApexCharts.SeriesStroke.DashSpace">
            <summary>
            The dash value to add to <see cref="P:ApexCharts.Stroke.DashArray"/> for the series
            </summary>
        </member>
        <member name="P:ApexCharts.SeriesStroke.Width">
            <summary>
            The width value to add to <see cref="P:ApexCharts.Stroke.Width"/> for the series
            </summary>
        </member>
        <member name="T:ApexCharts.ZoomOptions">
            <summary>
            Class to provide options for <see cref="M:ApexCharts.ApexChart`1.ZoomXAsync(ApexCharts.ZoomOptions)"/>
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomOptions.Start">
            <summary>
            The starting x-axis value. Accepts timestamp or a number
            </summary>
        </member>
        <member name="P:ApexCharts.ZoomOptions.End">
            <summary>
            The ending x-axis value. Accepts timestamp or a number
            </summary>
        </member>
        <member name="T:ApexCharts.ApexBaseSeries`1">
            <summary>
            Base class to create a data series for a chart
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Chart">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Chart"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Name">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Name"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.XValue">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.XValue"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.ShowDataLabels">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.ShowDataLabels"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Items">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Items"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Stroke">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Stroke"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Color">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Color"/>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.PointColor">
            <summary>
            A function to provide a custom color for data points in the series
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/options/colors">JavaScript Reference</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexBaseSeries`1.Group">
            <inheritdoc cref="P:ApexCharts.IApexSeries`1.Group"/>
        </member>
        <member name="M:ApexCharts.ApexBaseSeries`1.Toggle">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Toggle"/>
        </member>
        <member name="M:ApexCharts.ApexBaseSeries`1.Show">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Show"/>
        </member>
        <member name="M:ApexCharts.ApexBaseSeries`1.Hide">
            <inheritdoc cref="M:ApexCharts.IApexSeries`1.Hide"/>
        </member>
        <member name="M:ApexCharts.ApexBaseSeries`1.GetPointColor(`0)">
            <summary>
            Executes the <see cref="P:ApexCharts.ApexBaseSeries`1.PointColor"/> function on the provided data point and returns the color value
            </summary>
            <param name="item">The data point to return the color for</param>
        </member>
        <member name="M:ApexCharts.ApexBaseSeries`1.GetPointColor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Executes the <see cref="P:ApexCharts.ApexBaseSeries`1.PointColor"/> function on the provided data points and returns the color value
            </summary>
            <param name="items">The data points to return the color for</param>
            <remarks>
            Only returns the color for the first item in the collection
            </remarks>
        </member>
        <member name="T:ApexCharts.ApexBoxPlotSeries`1">
            <summary>
            Component to create a <see cref="F:ApexCharts.ChartType.BoxPlot"/> data series in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/boxplot-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/boxplot">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.Min">
            <summary>
            Expression to get the lowest Y-Value for each X-Value. This will determine where the lower whisker is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.Quantile1">
            <summary>
            Expression to get the Q1 Y-Value for each X-Value. This will determine where the bottom of the box is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.Median">
            <summary>
            Expression to get the median Y-Value for each X-Value. This will determine where the separator line between Q1 and Q3 is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.Quantile3">
            <summary>
            Expression to get the Q3 Y-Value for each X-Value. This will determine where the top of the box is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.Max">
            <summary>
            Expression to get the highest Y-Value for each X-Value. This will determine where the upper whisker is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBoxPlotSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexBoxPlotSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBoxPlotSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBoxPlotSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBoxPlotSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.ApexBubbleSeries`1">
            <summary>
            Component to create a <see cref="F:ApexCharts.ChartType.Bubble"/> data series in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/bubble-charts">Blazor Example</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexBubbleSeries`1.YAggregate">
            <summary>
            Expression to group Y-Values with. This will determine where each bubble is drawn on the Y-axis.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBubbleSeries`1.ZAggregate">
            <summary>
            Expression to group Z-Values with. This will determine the size of each bubble.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBubbleSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBubbleSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexBubbleSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexBubbleSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBubbleSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBubbleSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexBubbleSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.ApexCandleSeries`1">
            <summary>
            Component to create a <see cref="F:ApexCharts.ChartType.Candlestick"/> data series in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/candlestick-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/candlestick">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.Open">
            <summary>
            Expression to get the starting Y-Value for each X-Value. This will determine where the top and bottom of the box are drawn.
            </summary>
            <remarks>
            If the open value is greater than the close value the candlestick will default to a red color.
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.High">
            <summary>
            Expression to get the highest Y-Value for each X-Value. This will determine where the top of the wick is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.Low">
            <summary>
            Expression to get the lowest Y-Value for each X-Value. This will determine where the bottom of the wick is drawn.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.Close">
            <summary>
            Expression to get the starting Y-Value for each X-Value. This will determine where the top and bottom of the box are drawn.
            </summary>
            <remarks>
            If the close value is greater than the open value the candlestick will default to a green color.
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexCandleSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexCandleSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexCandleSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexCandleSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexCandleSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.ApexPointSeries`1">
            <summary>
            Component to create various data series types in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.com/docs/chart-types">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.YValue">
            <summary>
            Expression to get the Y-value for each X-Value. Use when a single Y-value is available.
            </summary>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.YAggregate">
            <summary>
            Expression to group Y-values for each X-Value. Use when a multiple Y-values are available.
            </summary>
            <remarks>
            Will be ignored if <see cref="P:ApexCharts.ApexPointSeries`1.YValue"/> is set
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.SeriesType">
            <summary>
            Determines the type of data series to draw on the chart
            </summary>
        </member>
        <member name="P:ApexCharts.ApexPointSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexPointSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexPointSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexPointSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexPointSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.ApexRangeAreaSeries`1">
            <summary>
            Component to create a <see cref="F:ApexCharts.ChartType.RangeArea"/> data series in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/rangearea-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/range-area-chart">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexRangeAreaSeries`1.Top">
            <summary>
            Expression to get the upper Y-Value for each X-Value
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeAreaSeries`1.Bottom">
            <summary>
            Expression to get the lower Y-Value for each X-Value
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeAreaSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeAreaSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeAreaSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexRangeAreaSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeAreaSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeAreaSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeAreaSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.ApexRangeSeries`1">
            <summary>
            Component to create a <see cref="F:ApexCharts.ChartType.RangeBar"/> data series in Blazor
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/rangebar-charts">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/chart-types/range-bar-chart">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.YValue">
            <summary>
            Expression to get the Y-values for each X-Value. This will determine the starting and ending points for each individual bar.
            </summary>
            <remarks>
            Will be ignored if both <see cref="P:ApexCharts.ApexRangeSeries`1.YMinValue"/> and <see cref="P:ApexCharts.ApexRangeSeries`1.YMaxValue"/> are set
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.OrderBy">
            <summary>
            Expression to determine the ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.OrderByDescending">
            <summary>
            Expression to determine the inverse ordering of X-Values in the series
            </summary>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.YMinValue">
            <summary>
            Expression to get the minumum Y-value for each X-Value. This will be the starting point for an individual bar.
            </summary>
            <remarks>
            Must also specify <see cref="P:ApexCharts.ApexRangeSeries`1.YMaxValue"/>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.YMaxValue">
            <summary>
            Expression to get the maximum Y-value for each X-Value. This will be the ending point for an individual bar.
            </summary>
            <remarks>
            Must also specify <see cref="P:ApexCharts.ApexRangeSeries`1.YMinValue"/>
            </remarks>
        </member>
        <member name="P:ApexCharts.ApexRangeSeries`1.DataPointMutator">
            <summary>
            Function to conditionally modify individual data points in the series
            </summary>
        </member>
        <member name="M:ApexCharts.ApexRangeSeries`1.OnInitialized">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeSeries`1.GetChartType">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc/>
        </member>
        <member name="M:ApexCharts.ApexRangeSeries`1.GetData">
            <summary>
            Executes <see cref="M:ApexCharts.IApexSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})"/> on the <see cref="P:ApexCharts.IApexSeries`1.Items"/> collection and returns the results
            </summary>
        </member>
        <member name="M:ApexCharts.ApexRangeSeries`1.Dispose">
            <inheritdoc/>
        </member>
        <member name="T:ApexCharts.IApexSeries`1">
            <summary>
            Interface to define shared requirements for all chart types
            </summary>
            <typeparam name="TItem">The data type to be used in the chart to create data points.</typeparam>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Chart">
            <summary>
            Provides a reference to the parent chart object
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Name">
            <summary>
            The text to identify the series with
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.XValue">
            <summary>
            Expression to return the X-value for each data point in the series
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Items">
            <summary>
            The collection of data points to display on the series
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Color">
            <summary>
            The color to assign to values in the data series
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Group">
            <summary>
            The name of the group
            </summary>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.ShowDataLabels">
            <inheritdoc cref="P:ApexCharts.DataLabels.Enabled"/>
        </member>
        <member name="P:ApexCharts.IApexSeries`1.Stroke">
            <summary>
            Used to generate the <see cref="P:ApexCharts.ApexChartOptions`1.Stroke"/> values for the series
            </summary>
        </member>
        <member name="M:ApexCharts.IApexSeries`1.GenerateDataPoints(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Prepares the provided items to be displayed on the chart
            </summary>
            <param name="items">The items to prepare</param>
        </member>
        <member name="M:ApexCharts.IApexSeries`1.GetChartType">
            <summary>
            Returns the type of chart for the current data series
            </summary>
        </member>
        <member name="M:ApexCharts.IApexSeries`1.Toggle">
            <summary>
            This method allows you to toggle the visibility of series programmatically. Useful when you have a custom legend.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/show-hide-series">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#toggleSeries">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.IApexSeries`1.Show">
            <summary>
            This method allows you to show the hidden series. If the series is already visible, this doesn't affect it.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/show-hide-series">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#showSeries">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="M:ApexCharts.IApexSeries`1.Hide">
            <summary>
            This method allows you to hide the visible series. If the series is already hidden, this method doesn't affect it.
            </summary>
            <remarks>
            Links:
            
            <see href="https://apexcharts.github.io/Blazor-ApexCharts/methods/show-hide-series">Blazor Example</see>,
            <see href="https://apexcharts.com/docs/methods/#hideSeries">JavaScript Documentation</see>
            </remarks>
        </member>
        <member name="T:ApexCharts.Series.JSLegendClicked">
            <summary>
            Return data from JavaScript when a legend item is clicked
            </summary>
        </member>
        <member name="P:ApexCharts.Series.JSLegendClicked.SeriesIndex">
            <summary>
            The index of the data series associated with the legend item that was clicked
            </summary>
        </member>
        <member name="P:ApexCharts.Series.JSLegendClicked.Collapsed">
            <summary>
            Specifies whether the series associated with the legend item is collapsed
            </summary>
        </member>
        <member name="T:ApexCharts.Series.JSSelection">
            <summary>
            Return data from JavaScript when a selection is made
            </summary>
        </member>
        <member name="P:ApexCharts.Series.JSSelection.XAxis">
            <inheritdoc cref="T:ApexCharts.SelectionXAxis"/>
        </member>
        <member name="P:ApexCharts.Series.JSSelection.YAxis">
            <inheritdoc cref="T:ApexCharts.SelectionYAxis"/>
        </member>
        <member name="T:ApexCharts.Series.JSZoomed">
            <summary>
            Return data from JavaScript when a zoom action is performed
            </summary>
        </member>
        <member name="P:ApexCharts.Series.JSZoomed.XAxis">
            <inheritdoc cref="T:ApexCharts.SelectionXAxis"/>
        </member>
        <member name="P:ApexCharts.Series.JSZoomed.YAxis">
            <summary>
            Y axis object
            </summary>
        </member>
        <member name="T:ApexCharts.LegendClicked`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnLegendClicked"/> is invoked
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.LegendClicked`1.Series">
            <summary>
            The data series associated with the legend item that was clicked
            </summary>
        </member>
        <member name="P:ApexCharts.LegendClicked`1.Collapsed">
            <summary>
            Specifies whether the series associated with the legend item is collapsed
            </summary>
        </member>
        <member name="T:ApexCharts.SeriesType">
            <summary>
            A listing of chart types available to create
            </summary>
        </member>
        <member name="T:ApexCharts.XAxisLabelClicked`1">
            <summary>
            Return data sent when <see cref="P:ApexCharts.ApexChart`1.OnXAxisLabelClick"/> is invoked
            </summary>
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.XAxisLabelClicked`1.LabelIndex">
            <inheritdoc cref="P:ApexCharts.JSXAxisLabelClick.LabelIndex"/>
        </member>
        <member name="P:ApexCharts.XAxisLabelClicked`1.Caption">
            <inheritdoc cref="P:ApexCharts.JSXAxisLabelClick.Caption"/>
        </member>
        <member name="P:ApexCharts.XAxisLabelClicked`1.SeriesPoints">
            <summary>
            The collection of data points associated with the X-axis label that was clicked
            </summary>
        </member>
        <member name="T:ApexCharts.SeriesDataPoint`1">
            <typeparam name="TItem">The data type of the items to display in the chart</typeparam>
        </member>
        <member name="P:ApexCharts.SeriesDataPoint`1.Series">
            <summary>
            The data series the <see cref="P:ApexCharts.SeriesDataPoint`1.DataPoint"/> belongs to
            </summary>
        </member>
        <member name="P:ApexCharts.SeriesDataPoint`1.DataPoint">
            <summary>
            A data point within belonging to the X-axis label that was clicked
            </summary>
        </member>
        <member name="T:BlazorApexCharts.ChartSerializer">
            <summary>
            Contains methods to assist with serializing chart data
            </summary>
        </member>
        <member name="M:BlazorApexCharts.ChartSerializer.GetOptions``1">
            <summary>
            Returns the JSON serializer options for the provided data type
            </summary>
            <typeparam name="TItem">The data type to be serialized</typeparam>
        </member>
    </members>
</doc>
